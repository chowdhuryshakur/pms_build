{"version":3,"sources":["views/pages/authentication/Login.js","views/viewhelper.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/CardText.js","@core/components/input-password-toggle/index.js"],"names":["ToastContent","name","role","className","size","color","icon","Login","props","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","history","useHistory","useState","setEmail","setPassword","loading","setloading","servererrors","useForm","register","errors","handleSubmit","useEffect","fetch","then","res","json","data","localStorage","setItem","ip","illustration","source","require","default","to","onClick","e","preventDefault","width","src","nagad","style","window","TukitakiThemeColor","lg","sm","alt","md","tag","onSubmit","email","password","isObjEmpty","useJwt","merchentlogin","mobile","Number","a","payload","user_info","accessToken","token","refreshToken","extras","eCommerceCartItemsCount","action","subject","handleLogin","update","toast","success","username","transition","Slide","hideProgressBar","autoClose","getPMStoken","module","access_token","catch","err","console","log","customerbusinesslistbymobileno","JSON","stringify","push","getHomeRouteForLoggedInUser","Error","getBMStoken","BMS_USER","BMS_PASS","jwtToken","for","autoFocus","type","id","placeholder","onChange","target","value","classnames","innerRef","required","validate","minLength","length","Ripple","block","disabled","response","status","error","message","position","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","Object","keys","Success","propTypes","tagPropType","PropTypes","string","cssModule","object","CardTitle","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","children","Spinner","CardText","InputPasswordToggle","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon"],"mappings":"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","file":"static/js/215.53d63e86.chunk.js","sourcesContent":["import Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\nimport classnames from 'classnames'\r\nimport { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Coffee } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport {BMS_USER, BMS_PASS} from '../../../Configurables'\r\nimport {\r\n  Button, CardText, CardTitle, Col, Form, FormGroup, Input, Label, Row, Spinner\r\n} from 'reactstrap'\r\nimport nagad from '../../../assets/images/icons/nagad.png'\r\nimport { Error } from '../../viewhelper'\r\n\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to system. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\n\r\nconst Login = props => {\r\n  const [skin, setSkin] = useSkin()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setloading] = useState(false)\r\n  const [servererrors, seterrors] = useState({})\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.ipify.org/?format=json')\r\n      .then(res => res.json())\r\n      .then(data => localStorage.setItem('ip', data.ip))\r\n  }, [])\r\n\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const email = data['loginemail']\r\n    const password = data['login-password']\r\n\r\n    // console.log({ mobile: Number(email), password })\r\n    if (isObjEmpty(errors)) {\r\n      setloading(true)\r\n      useJwt\r\n        .merchentlogin({ mobile: Number(email), password })\r\n        .then(async res => {\r\n          // console.log(res.data.payload, 'response')\r\n          // if (res.data.payload.checkininfo) {\r\n\r\n          //   history.push('/vendordashboard')\r\n          // }\r\n          setloading(false)\r\n          const data = {\r\n            ...res.data.payload.user_info,\r\n            // avatar: \"https://i.imgur.com/P4b2RHh.png\",\r\n            accessToken: res.data.payload.token,\r\n            refreshToken: res.data.payload.token,\r\n            extras: {\r\n              eCommerceCartItemsCount: 5\r\n            },\r\n            role: 'vendor',\r\n            ability: [\r\n              {\r\n                action: 'manage',\r\n                subject: 'VENDOR'\r\n              },\r\n              {\r\n                action: 'manage',\r\n                subject: 'Auth'\r\n              }\r\n            ]\r\n          }\r\n\r\n          dispatch(handleLogin(data))\r\n          ability.update(data.ability)\r\n          // localStorage.setItem('username', email)\r\n          toast.success(\r\n            <ToastContent name={data.username} role={data.role} />,\r\n            { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n          )\r\n\r\n          useJwt.getPMStoken({ username: \"dddd\", module: \"kkk\" }).then(res => {\r\n            localStorage.setItem('PMStoken', res.data.data.access_token)\r\n            localStorage.setItem(\"usePMStoken\", false)\r\n          }).catch(err => {\r\n            console.log('getPMStoken', err)\r\n          })\r\n\r\n          await useJwt.customerbusinesslistbymobileno({ mobile: Number(email) }).then(res =>  {\r\n            // console.log(res.data.payload)\r\n             localStorage.setItem('customerBusinesses', JSON.stringify(res.data.payload))\r\n             history.push(getHomeRouteForLoggedInUser(data.role))\r\n          }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n          })\r\n          \r\n          localStorage.setItem(\"BMSCall\", true)\r\n          useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\r\n            localStorage.setItem('BMStoken', res.data.jwtToken)\r\n            localStorage.setItem(\"BMSCall\", false)\r\n          }).catch(err => {\r\n            localStorage.setItem(\"BMSCall\", false)\r\n            console.log(err)\r\n          })\r\n\r\n        })\r\n        .catch(err => {\r\n          setloading(false)\r\n          Error(err)\r\n          console.log(err)\r\n        })\r\n    }\r\n  }\r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n\r\n          <img width='50px' src={nagad} />\r\n\r\n          <h2 style={{ color: window.TukitakiThemeColor }} className='brand-text ml-1 mt-1'>E-VMS Admin</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n              Welcome to TukiTaki! 👋\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  Mobile Number\r\n                </Label>\r\n                <Input\r\n                  autoFocus\r\n                  type='number'\r\n                  // value={email}\r\n                  id='login-email'\r\n                  name='loginemail'\r\n                  placeholder='Mobile number'\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  // value={password}\r\n                  id='login-password'\r\n                  name='login-password'\r\n                  minLength=\"6\"\r\n                  className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' && value.length > 5 })}\r\n                />\r\n                <span style={{ color: 'red' }} >{errors['login-password'] && \"Password must contain at least 6 characters, including 1 upper case,1 lower case, 1 number and a spatial character\"}</span>\r\n                <span style={{ color: 'red' }} >{servererrors['password']}</span>\r\n\r\n              </FormGroup>\r\n              {\r\n                loading ? <Button.Ripple color='primary' block disabled>\r\n                  <Spinner color='white' size='sm' />\r\n                  <span className='ml-50'>Loading...</span>\r\n                </Button.Ripple> : <Button.Ripple type='submit' color='primary' block>\r\n                  Sign in\r\n                </Button.Ripple>\r\n              }\r\n              <br></br>\r\n              <p className=\"text-center\" >Don't have an account &nbsp;<Link to=\"/merchantregister\">\r\n                Register\r\n              </Link>\r\n              </p>\r\n              <div className='divider my-2'>\r\n                <div className='divider-text'>or</div>\r\n              </div>\r\n              <p className=\"text-center\" >Login as &nbsp;<Link to=\"/Adminlogin\">\r\n                Admin\r\n              </Link>\r\n              </p>\r\n            </Form>\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}