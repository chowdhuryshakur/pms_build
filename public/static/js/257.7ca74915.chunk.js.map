{"version":3,"sources":["views/tables/data-tables/cashier/InvoiceListProducts.js","../node_modules/reactstrap/es/Spinner.js","views/helper.js"],"names":["withReactContent","Swal","InvoiceListProducts","history","useHistory","receipt_id","useParams","useState","currentPage","setCurrentPage","isloading","setisloading","data","setdata","infoData","setIinfo","invoiceids","setinvoiceids","subTotal","vat","total","count","setCount","useEffect","useJwt","invoiceDetails","then","res","console","log","payload","productsArray","concat","apply","invoices","map","x","index","invoice_id","items","total_exclude_vat","reduce","newAmount","Number","toFixed","catch","err","columns","name","selector","row","productinfo","productname","minWidth","sortable","product_code","window","CURRENCY_SYMBOL","thousandSeparator","Ripple","className","color","onClick","goBack","size","toString","customer_business_name","store_name","createdat","formatReadableDate","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive","style","width","textAlign","propTypes","tag","tagPropType","type","PropTypes","string","cssModule","object","children","Spinner","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","role","defaultProps","FormatePhoneNo","phone","String","replace","options","year","month","day","hour","minute","date","Date","toLocaleDateString","undefined"],"mappings":"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","file":"static/js/257.7ca74915.chunk.js","sourcesContent":["// ** React Imports\r\nimport { Fragment, useState, forwardRef, useEffect } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, ChevronLeft, Copy, Plus, MoreVertical,\r\n    Edit, Archive, Trash, Search, Eye, Settings\r\n} from 'react-feather'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu,\r\n    DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner,\r\n    CardBody, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nimport Select from 'react-select'\r\nimport { formatReadableDate, thousandSeparator } from '../../../helper'\r\n\r\nconst InvoiceListProducts = () => {\r\n    const history = useHistory()\r\n    const { receipt_id } = useParams()\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [isloading, setisloading] = useState(true)\r\n    const [data, setdata] = useState([])\r\n    const [infoData, setIinfo] = useState({})\r\n    const [invoiceids, setinvoiceids] = useState([])\r\n    const [count, setCount] = useState({\r\n        subTotal: 0,\r\n        vat: 0,\r\n        total: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        useJwt.invoiceDetails({ receipt_id }).then(res => {\r\n            console.log(res.data.payload)\r\n            setisloading(false)\r\n            const invoiceids = []\r\n            const productsArray = [].concat.apply([], res.data.payload.invoices.map((x, index) => {\r\n                invoiceids[index] = x.invoice_id\r\n                return x.items\r\n            }))\r\n            console.log('productsArray ', productsArray)\r\n            setIinfo(res.data.payload)\r\n            setinvoiceids(invoiceids)\r\n            setdata([...productsArray])\r\n            const subTotal = productsArray.map(x => x.total_exclude_vat).reduce((total, newAmount) => total + newAmount)\r\n            const vat = productsArray.map(x => x.vat).reduce((total, newAmount) => total + newAmount)\r\n            setCount({ subTotal: Number(subTotal).toFixed(2), vat: Number(vat).toFixed(2), total: Number(subTotal + vat).toFixed(2) })\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Product name',\r\n            selector: (row, index) => {\r\n\r\n                if (row.productinfo) {\r\n                    return row.productinfo.productname\r\n                } else {\r\n                    return \"\"\r\n                }\r\n            },\r\n            minWidth: '200px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Product code',\r\n            selector: (row, index) => row.product_code,\r\n            minWidth: '100px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Quantity',\r\n            selector: 'quantity',\r\n            minWidth: '100px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Vat',\r\n            selector: (row) => `${window.CURRENCY_SYMBOL} ${(+row.vat).toFixed(2)}`,\r\n            minWidth: '100px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Price',\r\n            selector: (row) => `${window.CURRENCY_SYMBOL} ${thousandSeparator((+row.total_exclude_vat).toFixed(2))}`,\r\n            minWidth: '100px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Price + Vat',\r\n            selector: (row) => `${window.CURRENCY_SYMBOL} ${thousandSeparator((+(row.total_exclude_vat + row.vat)).toFixed(2))}`,\r\n            minWidth: '100px',\r\n            sortable: true\r\n        }\r\n    ]\r\n    // ** Function to handle Pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n    // ** Custom Pagination\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel=''\r\n            nextLabel=''\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={data.length / 7 || 1}\r\n            breakLabel='...'\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName='active'\r\n            pageClassName='page-item'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            nextClassName='page-item next'\r\n            previousClassName='page-item prev'\r\n            previousLinkClassName='page-link'\r\n            pageLinkClassName='page-link'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        />\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Button.Ripple className='ml-2' color='primary' onClick={() => history.goBack()}>\r\n                <ChevronLeft size={10} />\r\n                <span className='align-middle ml-50'>Back to Invoice List</span>\r\n            </Button.Ripple>\r\n            <Card className='p-1 my-2'>\r\n                <p>Receipt id: {infoData.receipt_id}</p>\r\n                <p>Invoice id: {invoiceids.toString()}</p>\r\n                <p>Invoice to : {infoData.customer_business_name}</p>\r\n                <p>Store name: {infoData.store_name}</p>\r\n                <p>Date : { infoData.createdat ? formatReadableDate(infoData.createdat) : null} </p>\r\n            </Card>\r\n\r\n            <Card>\r\n                <DataTable\r\n                    noHeader\r\n                    pagination\r\n                    columns={columns}\r\n                    paginationPerPage={7}\r\n                    className='react-dataTable'\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={data}\r\n                    progressPending={isloading}\r\n                    progressComponent={<Spinner color='primary' />}\r\n                    responsive={true}\r\n                />\r\n                <div className=\"w-100 p-2 d-flex justify-content-end\">\r\n                    <div style={{ width: '150px', textAlign: 'right' }}>\r\n                        <p>Subtotal : {`${window.CURRENCY_SYMBOL} ${thousandSeparator((+count.subTotal).toFixed(2))}`}</p>\r\n                        <p>Vat : {`${window.CURRENCY_SYMBOL} ${thousandSeparator((+count.vat).toFixed())}`}</p>\r\n                        <hr />\r\n                        <p>Total : {`${window.CURRENCY_SYMBOL} ${thousandSeparator((+count.total).toFixed(2))}`}</p>\r\n                    </div>\r\n                </div>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InvoiceListProducts","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","\r\n//Ex-> '1234567891' to '1234 567 891'\r\nexport const FormatePhoneNo = (phone) => {\r\n   const phonenoinstring = String(phone)\r\n  return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\r\n}\r\n\r\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\r\n\r\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\r\n\r\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }"],"sourceRoot":""}