{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/PointRuleManagement/EditModal.js","views/tables/data-tables/basic/AdminComponent/PointRuleManagement/PointRuleList.js","views/viewhelper.js","views/tables/data-tables/basic/AdminComponent/ClientSideDataTable.js","views/helper.js"],"names":["EditModal","modal","toggleModal","pointRuleInfo","setPointRuleInfo","setReset","resetData","JSON","parse","localStorage","getItem","useState","editPointRuleloading","seteditPointRuleloading","email","handleChange","e","target","name","value","Modal","isOpen","toggle","className","ModalHeader","ModalBody","Form","style","width","onSubmit","preventDefault","Id","SKUAmount","SKUPoints","SKUStartRange","SKUEndRange","IsRange","setItem","merchantId","merchantid","tempSkuAmount","useJwt","updateMyRule","rule_id","skuamount","skupoints","skustartrange","skuendrange","isrange","then","res","console","log","Success","catch","err","Error","autoComplete","Col","sm","FormGroup","Label","for","Input","type","id","onChange","required","placeholder","check","checked","Button","Ripple","color","disabled","marginTop","Spinner","size","MySwal","withReactContent","Swal","PointRuleList","Array2D","map","x","submenu","y","subMenuIDs","concat","TableDataLoading","setTableDataLoading","pointRuleList","setPointRuleList","setModal","useEffect","getAllPointRules","data","column","minWidth","sortable","cell","row","index","selector","item","CreatedAt","formatReadableDate","title","cursor","onClick","message","fire","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","deleteMyRule","filter","response","buttonsStyling","isLoading","result","isConfirmed","Card","CardHeader","CardTitle","tag","includes","Link","to","marginRight","CardBody","Row","md","TableData","status","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","CommonDataTable","currentPage","setCurrentPage","customStyles","cells","whiteSpace","noHeader","pagination","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive","FormatePhoneNo","phone","String","replace","options","year","month","day","hour","minute","date","Date","toLocaleDateString","thousandSeparator","toString"],"mappings":"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","file":"static/js/253.4580a7c0.chunk.js","sourcesContent":["import { Fragment, useState, useEffect, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical,\r\n    Edit, Archive, Trash, Search, ChevronLeft, Eye, XCircle, Facebook, Globe, Instagram, Twitter\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, CardBody, CustomInput, Table, Spinner, InputGroup, InputGroupAddon, InputGroupText, FormFeedback, Progress, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\n\r\nconst EditModal = ({ modal, toggleModal, pointRuleInfo, setPointRuleInfo, setReset, resetData }) => {\r\n    const BusinessList = JSON.parse(localStorage.getItem('customerBusinesses'))\r\n    const [editPointRuleloading, seteditPointRuleloading] = useState(false)\r\n    const [error, seterror] = useState({\r\n        email: false\r\n    })\r\n\r\n    const handleChange = (e) => {\r\n        setPointRuleInfo({ ...pointRuleInfo, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        const { Id, SKUAmount, SKUPoints, SKUStartRange, SKUEndRange, IsRange } = pointRuleInfo\r\n        localStorage.setItem('usePMStoken', true)\r\n        seteditPointRuleloading(true)\r\n        const merchantId = pointRuleInfo.merchantid\r\n        let tempSkuAmount = 0\r\n        if (!IsRange) { tempSkuAmount = SKUAmount }\r\n        useJwt.updateMyRule(merchantId, { rule_id:Id, skuamount:tempSkuAmount, skupoints:SKUPoints, skustartrange:SKUStartRange, skuendrange:SKUEndRange, isrange:IsRange }).then(res => {\r\n            setReset(!resetData)\r\n            seteditPointRuleloading(false)\r\n            console.log(res)\r\n            toggleModal()\r\n            Success(res)\r\n        }).catch(err => {\r\n            seteditPointRuleloading(false)\r\n            localStorage.setItem('usePMStoken', false)\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggleModal} className='modal-dialog-centered'>\r\n            <ModalHeader toggle={toggleModal}>Edit Point Rule</ModalHeader>\r\n            <ModalBody>\r\n                <Form className=\"row\" style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\r\n                    <Col sm=\"6\" >\r\n                                    <FormGroup>\r\n                                        <Label for=\"SKUPoints\">SKU Points</Label>\r\n                                        <Input type=\"number\"\r\n                                            name=\"SKUPoints\"\r\n                                            id='SKUPoints'\r\n                                            value={pointRuleInfo.SKUPoints}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                            placeholder=\"0\"\r\n                                        />\r\n                                    </FormGroup>\r\n                    </Col>\r\n                    <Col sm=\"12\" className='mb-1' >\r\n                            <FormGroup check>\r\n                                <Input onChange={(e) => {\r\n                                        if (e.target.checked) { \r\n                                            setPointRuleInfo({ ...pointRuleInfo, IsRange: true })\r\n                                        } else {\r\n                                            setPointRuleInfo({ ...pointRuleInfo, IsRange: false })\r\n                                        }\r\n                                    }\r\n                                } type='checkbox' id='viaEmail' checked={pointRuleInfo.IsRange}/>\r\n                                <Label for='viaEmail' check>\r\n                                    Is Range\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    {pointRuleInfo.IsRange ?  <Col sm=\"6\" >\r\n                                <FormGroup>\r\n                                    <Label for=\"SKUStartRange\">SKU Start Range</Label>\r\n                                    <Input type=\"number\"\r\n                                        name=\"SKUStartRange\"\r\n                                        id='SKUStartRange'\r\n                                        value={pointRuleInfo.SKUStartRange}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        placeholder=\"0\"\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col> : null}\r\n                    { pointRuleInfo.IsRange ? <Col sm=\"6\" >\r\n                                <FormGroup>\r\n                                    <Label for=\"SKUEndRange\">SKU End Range</Label>\r\n                                    <Input type=\"number\"\r\n                                        name=\"SKUEndRange\"\r\n                                        id='SKUEndRange'\r\n                                        value={pointRuleInfo.SKUEndRange}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        placeholder=\"0\"\r\n                                    />\r\n                                </FormGroup>\r\n                            </Col> : null}\r\n                    {pointRuleInfo.IsRange ? null :  <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"SKUAmount\">SKU Amount</Label>\r\n                                <Input type=\"number\"\r\n                                    name=\"SKUAmount\"\r\n                                    id='SKUAmount'\r\n                                    value={pointRuleInfo.SKUAmount}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"0\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                    }\r\n\r\n                    <Col sm=\"12\" className='text-center'>\r\n                        {\r\n                            editPointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\r\n                                <Spinner color='white' size='sm' />\r\n                                <span className='ml-50'>Loading...</span>\r\n                            </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\r\n                                <span >Submit</span>\r\n                            </Button.Ripple>\r\n                        }\r\n                    </Col>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\nexport default EditModal","import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, CheckCircle, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nimport CommonDataTable from '../ClientSideDataTable'\r\nimport EditModal from './EditModal'\r\nimport { formatReadableDate } from '../../../../../helper'\r\n\r\nconst PointRuleList = () => {\r\n    const AssignedMenus = JSON.parse(localStorage.getItem('AssignedMenus')) || []\r\n    const Array2D = AssignedMenus.map(x => x.submenu.map(y => y.id))\r\n    const subMenuIDs = [].concat(...Array2D)\r\n\r\n    const [TableDataLoading, setTableDataLoading] = useState(true)\r\n    const [resetData, setReset] = useState(true)\r\n    const [pointRuleList, setPointRuleList] = useState([])\r\n    const [pointRuleInfo, setPointRuleInfo] = useState({})\r\n\r\n    const [modal, setModal] = useState(false)\r\n    const toggleModal = () => setModal(!modal)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('usePMStoken', true)\r\n        useJwt.getAllPointRules().then(res => {\r\n            console.log(res)\r\n            setPointRuleList(res.data.data)\r\n            localStorage.setItem('usePMStoken', false)\r\n            setTableDataLoading(false)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n            setTableDataLoading(false)\r\n            localStorage.setItem('usePMStoken', false)\r\n        })\r\n    }, [resetData])\r\n    const handlePoPupActions = (rule_id, merchantId, message) => {\r\n        localStorage.setItem('usePMStoken', true)\r\n        return MySwal.fire({\r\n            title: message,\r\n            text: `You won't be able to revert this`,\r\n            icon: 'warning',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-danger ml-1'\r\n            },\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                return useJwt.deleteMyRule(merchantId, { rule_id }).then(res => {\r\n                    Success(res)\r\n                    console.log(res)\r\n                    setPointRuleList(pointRuleList.filter(x => x.Id !== rule_id))\r\n                    localStorage.setItem('usePMStoken', false)\r\n                }).catch(err => {\r\n                    localStorage.setItem('usePMStoken', false)\r\n                    console.log(err.response)\r\n                    Error(err)\r\n                })\r\n            },\r\n            buttonsStyling: false,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(function (result) {\r\n            if (result.isConfirmed) {\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n    const column = [\r\n        {\r\n            name: 'SL',\r\n            minWidth: '20px',\r\n            sortable: true,\r\n            cell: (row, index) => index + 1  //RDT provides index by default\r\n        },\r\n        {\r\n            name: 'Merchant Name',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'MerchantName'\r\n        },\r\n        {\r\n            name: 'SKU Points',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'SKUPoints'\r\n        },\r\n        {\r\n            name: 'Is Range',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: (item) => {\r\n                return item.IsRange ? 'True' : 'False'\r\n            }\r\n        },\r\n        {\r\n            name: 'SKU Amount',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'SKUAmount'\r\n        },\r\n        {\r\n            name: 'SKU Start Range',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'SKUStartRange'\r\n        },\r\n        {\r\n            name: 'SKU End Range',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'SKUEndRange'\r\n        },\r\n        {\r\n            name: 'Product ID',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'product_id'\r\n        },\r\n        {\r\n            name: 'Created At',\r\n            minWidth: '250px',\r\n            sortable: true,\r\n            selector: (item) => {\r\n                return item.CreatedAt ? formatReadableDate(item.CreatedAt) : null\r\n            }\r\n        },\r\n        {\r\n            name: 'Created By',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'CreatedBy'\r\n        },\r\n        {\r\n            name: 'Action',\r\n            minWidth: '100px',\r\n            // sortable: true,\r\n            selector: row => {\r\n                return <>\r\n                    <span title=\"Edit\">\r\n                        <Edit size={15}\r\n                            color='teal'\r\n                            style={{ cursor: 'pointer' }}\r\n                            onClick={(e) => {\r\n                                setPointRuleInfo(row)\r\n                                setModal(true)\r\n                            }}\r\n                        />\r\n                    </span>&nbsp;&nbsp;\r\n                    <span title=\"Delete\">\r\n                        <Trash size={15}\r\n                            color='red'\r\n                            style={{ cursor: 'pointer' }}\r\n                            onClick={(e) => handlePoPupActions(row.Id, row.merchantid, 'Do you want to delete?')}\r\n                        />\r\n                    </span>\r\n                </>\r\n            }\r\n        }\r\n    ]\r\n    return (\r\n        <Card>\r\n            <CardHeader className='border-bottom'>\r\n                <CardTitle tag='h4'>SKU Rules</CardTitle>\r\n                {subMenuIDs.includes(16) && <Button.Ripple className='ml-2' color='primary' tag={Link} to='/createPointRuleForAdmin' >\r\n                    <div className='d-flex align-items-center'>\r\n                        <Plus size={17} style={{ marginRight: '5px' }} />\r\n                        <span >Create SKU Rule</span>\r\n                    </div>\r\n                </Button.Ripple>}\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Row>\r\n                    <Col md='12'>\r\n                        <CommonDataTable column={column} TableData={pointRuleList} TableDataLoading={TableDataLoading} />\r\n                    </Col>\r\n                </Row>\r\n                <EditModal\r\n                    toggleModal={toggleModal}\r\n                    modal={modal}\r\n                    resetData={resetData}\r\n                    setReset={setReset}\r\n                    pointRuleInfo={pointRuleInfo}\r\n                    setPointRuleInfo={setPointRuleInfo}\r\n                />\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PointRuleList","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap'\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\n\r\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const customStyles = {\r\n        cells: {\r\n            style: {\r\n                whiteSpace: 'break-spaces'\r\n            }\r\n        }\r\n    }\r\n    // ** Function to handle Pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n    // ** Custom Pagination\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel=''\r\n            nextLabel=''\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={TableData.length ? TableData.length / 10 : 1}\r\n            breakLabel='...'\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName='active'\r\n            pageClassName='page-item'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            nextClassName='page-item next'\r\n            previousClassName='page-item prev'\r\n            previousLinkClassName='page-link'\r\n            pageLinkClassName='page-link'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        />\r\n    )\r\n    return (\r\n        <Fragment>\r\n            <DataTable\r\n                customStyles={customStyles}\r\n                noHeader\r\n                pagination\r\n                /*selectableRows*/\r\n                columns={column}\r\n                paginationPerPage={10}\r\n                className='react-dataTable'\r\n                sortIcon={<ChevronDown size={10} />}\r\n                paginationDefaultPage={currentPage + 1}\r\n                paginationComponent={CustomPagination}\r\n                data={TableData}\r\n                progressPending={TableDataLoading}\r\n                progressComponent={<Spinner color='primary' />}\r\n                responsive={true}\r\n            /*selectableRowsComponent={BootstrapCheckbox}*/\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CommonDataTable","\r\n//Ex-> '1234567891' to '1234 567 891'\r\nexport const FormatePhoneNo = (phone) => {\r\n   const phonenoinstring = String(phone)\r\n  return phonenoinstring.replace(/^(.{4})(.*)(.{3})$/, '$1 $2 $3')\r\n}\r\n\r\nconst options = { year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric' }\r\n\r\nexport const formatReadableDate = (date) => { return (new Date(date)).toLocaleDateString(undefined, options) }\r\n\r\nexport const thousandSeparator = (x) => { return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") }"],"sourceRoot":""}