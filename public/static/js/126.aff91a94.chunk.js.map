{"version":3,"sources":["views/extensions/drag-and-drop/DndClone.js","views/extensions/drag-and-drop/DndCards.js","views/extensions/drag-and-drop/DndHandle.js","views/extensions/drag-and-drop/DndMultiple.js","views/extensions/drag-and-drop/DndMultiDrag.js","views/extensions/drag-and-drop/DndListGroup.js","views/extensions/drag-and-drop/index.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardText.js","../node_modules/reactstrap/es/CardHeader.js","@core/components/extensions-header/index.js"],"names":["DndClone","useState","text","color","list","setList","list2","setList2","Card","CardHeader","CardTitle","tag","CardBody","CardText","Row","Col","md","sm","className","group","name","pull","map","item","Badge","pill","dragItems","id","title","content","DndCards","cardsArr","setCardsArr","xl","array","DndMultiple","listArr1","setListArr1","listArr2","setListArr2","handle","ListGroupItem","list1","img","img1","img2","img3","img4","img5","img6","img7","img8","img9","img10","Media","left","object","src","alt","height","width","body","DndMultiDrag","multiDrag","listItems","DndListGroup","listArr","setListArr","DragAndDrop","subTitle","link","DndHandle","propTypes","tagPropType","inverse","PropTypes","bool","string","outline","cssModule","innerRef","oneOfType","func","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","stringOrNumberProp","number","columnProps","shape","size","order","offset","xs","lg","widths","getColumnSizeClass","isXs","colWidth","colSize","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","_colClass","length","rowColsPropType","noGutters","form","ExtensionsHeader","href","target","rel"],"mappings":"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","file":"static/js/126.aff91a94.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, Badge } from 'reactstrap'\r\n\r\nconst DndClone = () => {\r\n  const source1 = [\r\n    {\r\n      text: 'Youtube',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Facebook',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Google',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Instagram',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Twitter',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Discord',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n  const source2 = [\r\n    {\r\n      text: 'Github',\r\n      color: 'light-secondary'\r\n    },\r\n    {\r\n      text: 'Gitlab',\r\n      color: 'light-primary'\r\n    },\r\n    {\r\n      text: 'Slack',\r\n      color: 'light-success'\r\n    },\r\n    {\r\n      text: 'Pinterest',\r\n      color: 'light-danger'\r\n    },\r\n    {\r\n      text: 'Tinder',\r\n      color: 'light-info'\r\n    },\r\n    {\r\n      text: 'Amazon',\r\n      color: 'light-warning'\r\n    }\r\n  ]\r\n\r\n  const [list, setList] = useState(source1)\r\n  const [list2, setList2] = useState(source2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Clone List</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Add <code>pull:clone</code> with your group prop to clone items.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 1</h4>\r\n            <ReactSortable\r\n              className='demo-inline-spacing sortable'\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              list={list}\r\n              setList={setList}\r\n            >\r\n              {list.map(item => {\r\n                return (\r\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>Badge Source 2</h4>\r\n            <ReactSortable\r\n              className='demo-inline-spacing sortable'\r\n              group={{ name: 'shared-badge-group', pull: 'clone' }}\r\n              list={list2}\r\n              setList={setList2}\r\n            >\r\n              {list2.map(item => {\r\n                return (\r\n                  <Badge className='draggable' key={item.text} color={item.color} pill>\r\n                    {item.text}\r\n                  </Badge>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndClone\r\n","import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { Card, CardHeader, CardBody, CardTitle, CardText, Col } from 'reactstrap'\r\n\r\nconst dragItems = [\r\n  {\r\n    id: '1',\r\n    title: 'Draggable Card 1',\r\n    content:\r\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Draggable Card 2',\r\n    content:\r\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Draggable Card 3',\r\n    content:\r\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Draggable Card 4',\r\n    content:\r\n      'Jelly beans sugar plum cheesecake cookie oat cake soufflé.Tootsie roll bonbon liquorice tiramisu pie powder.Donut sweet roll marzipan pastry cookie cake tootsie roll oat cake cookie.'\r\n  }\r\n]\r\n\r\nconst DndCards = () => {\r\n  const [cardsArr, setCardsArr] = useState(dragItems)\r\n\r\n  return (\r\n    <ReactSortable className='row sortable-row' list={cardsArr} setList={setCardsArr}>\r\n      {cardsArr.map(item => (\r\n        <Col className='draggable' xl='3' md='6' sm='12' key={item.id}>\r\n          <Card className={`draggable-cards ${item.id !== 4 ? 'mr-1' : null}`}>\r\n            <CardHeader>\r\n              <CardTitle tag='h4'>{item.title}</CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <CardText>{item.content}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </ReactSortable>\r\n  )\r\n}\r\n\r\nexport default DndCards\r\n","import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem } from 'reactstrap'\r\n\r\nconst array = {\r\n  list1: [\r\n    {\r\n      id: '1',\r\n      content: 'Cras justo odio'\r\n    },\r\n    {\r\n      id: '2',\r\n      content: 'Dapibus ac facilisis in'\r\n    },\r\n    {\r\n      id: '3',\r\n      content: 'Morbi leo risus'\r\n    },\r\n    {\r\n      id: '4',\r\n      content: 'Porta ac consectetur ac'\r\n    },\r\n    {\r\n      id: '5',\r\n      content: 'Vestibulum at eros'\r\n    }\r\n  ],\r\n  list2: [\r\n    {\r\n      id: '6',\r\n      content: 'Cras justo odio'\r\n    },\r\n    {\r\n      id: '7',\r\n      content: 'Dapibus ac facilisis in'\r\n    },\r\n    {\r\n      id: '8',\r\n      content: 'Morbi leo risus'\r\n    },\r\n    {\r\n      id: '9',\r\n      content: 'Porta ac consectetur ac'\r\n    },\r\n    {\r\n      id: '10',\r\n      content: 'Vestibulum at eros'\r\n    }\r\n  ]\r\n}\r\n\r\nconst DndMultiple = () => {\r\n  const [listArr1, setListArr1] = useState(array.list1)\r\n  const [listArr2, setListArr2] = useState(array.list2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Drag And Drop With Handle</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Add handle to your items using <code>handle</code> prop.\r\n        </CardText>\r\n        <Row id='dd-with-handle'>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>List One</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group sortable'\r\n              group='shared-handle-group'\r\n              handle='.handle'\r\n              list={listArr1}\r\n              setList={setListArr1}\r\n            >\r\n              {listArr1.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <span className='handle'>+</span>\r\n                    {item.content}\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 2</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group sortable'\r\n              group='shared-handle-group'\r\n              handle='.handle'\r\n              list={listArr2}\r\n              setList={setListArr2}\r\n            >\r\n              {listArr2.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <span className='handle'>+</span>\r\n                    {item.content}\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndMultiple\r\n","import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\r\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\r\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem, Media } from 'reactstrap'\r\n\r\nconst array = {\r\n  list1: [\r\n    {\r\n      id: '1',\r\n      img: img1,\r\n      name: 'Mary S. Navarre',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '2',\r\n      img: img2,\r\n      name: 'Samuel M. Ellis',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '3',\r\n      img: img3,\r\n      name: 'Sandra C. Toney',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\r\n    },\r\n    {\r\n      id: '4',\r\n      img: img4,\r\n      name: 'Cleveland C. Goins',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '5',\r\n      img: img5,\r\n      name: 'Linda M. English',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ],\r\n  list2: [\r\n    {\r\n      id: '6',\r\n      img: img6,\r\n      name: 'Alexandria I. Smelser',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '7',\r\n      img: img7,\r\n      name: 'Oscar N. Pool',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\r\n    },\r\n    {\r\n      id: '8',\r\n      img: img8,\r\n      name: 'Kathy A. Alvarado',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '9',\r\n      img: img9,\r\n      name: 'James E. White',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '10',\r\n      img: img10,\r\n      name: 'Roberta R. Babin',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ]\r\n}\r\n\r\nconst DndMultiple = () => {\r\n  const [listArr1, setListArr1] = useState(array.list1)\r\n  const [listArr2, setListArr2] = useState(array.list2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple Lists</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Use <code>group</code> prop to create a multiple list Drag & Drop.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 1</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-group'\r\n              list={listArr1}\r\n              setList={setListArr1}\r\n            >\r\n              {listArr1.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <Media>\r\n                      <Media left tag='div'>\r\n                        <Media\r\n                          object\r\n                          src={item.img}\r\n                          className='rounded-circle mr-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </Media>\r\n                      <Media body>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </Media>\r\n                    </Media>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 2</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-group'\r\n              list={listArr2}\r\n              setList={setListArr2}\r\n            >\r\n              {listArr2.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <Media>\r\n                      <Media left tag='div'>\r\n                        <Media\r\n                          object\r\n                          src={item.img}\r\n                          className='rounded-circle mr-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </Media>\r\n                      <Media body>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </Media>\r\n                    </Media>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndMultiple\r\n","import { useState } from 'react'\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport img6 from '@src/assets/images/portrait/small/avatar-s-5.jpg'\r\nimport img7 from '@src/assets/images/portrait/small/avatar-s-6.jpg'\r\nimport img8 from '@src/assets/images/portrait/small/avatar-s-7.jpg'\r\nimport img9 from '@src/assets/images/portrait/small/avatar-s-8.jpg'\r\nimport img10 from '@src/assets/images/portrait/small/avatar-s-9.jpg'\r\nimport { ReactSortable, Sortable, MultiDrag } from 'react-sortablejs'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col, ListGroupItem, Media } from 'reactstrap'\r\n\r\nconst array = {\r\n  list1: [\r\n    {\r\n      id: '1',\r\n      img: img1,\r\n      name: 'Mary S. Navarre',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '2',\r\n      img: img2,\r\n      name: 'Samuel M. Ellis',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '3',\r\n      img: img3,\r\n      name: 'Sandra C. Toney',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa.'\r\n    },\r\n    {\r\n      id: '4',\r\n      img: img4,\r\n      name: 'Cleveland C. Goins',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '5',\r\n      img: img5,\r\n      name: 'Linda M. English',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ],\r\n  list2: [\r\n    {\r\n      id: '6',\r\n      img: img6,\r\n      name: 'Alexandria I. Smelser',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '7',\r\n      img: img7,\r\n      name: 'Oscar N. Pool',\r\n      content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupsake.'\r\n    },\r\n    {\r\n      id: '8',\r\n      img: img8,\r\n      name: 'Kathy A. Alvarado',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    },\r\n    {\r\n      id: '9',\r\n      img: img9,\r\n      name: 'James E. White',\r\n      content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n    },\r\n    {\r\n      id: '10',\r\n      img: img10,\r\n      name: 'Roberta R. Babin',\r\n      content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n    }\r\n  ]\r\n}\r\n\r\n// Sortable.mount(new MultiDrag())\r\nconst DndMultiDrag = () => {\r\n  const [listArr1, setListArr1] = useState(array.list1)\r\n  const [listArr2, setListArr2] = useState(array.list2)\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Multiple Drag</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          Use <code>MultiDrag</code> prop to create a multiple drag list.\r\n        </CardText>\r\n        <CardText>\r\n          Use <code>CTRL</code> key to select multiple items.\r\n        </CardText>\r\n        <Row>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 1</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              multiDrag\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-multi-drag-group'\r\n              list={listArr1}\r\n              setList={setListArr1}\r\n            >\r\n              {listArr1.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <Media>\r\n                      <Media left tag='div'>\r\n                        <Media\r\n                          object\r\n                          src={item.img}\r\n                          className='rounded-circle mr-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </Media>\r\n                      <Media body>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </Media>\r\n                    </Media>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n          <Col md='6' sm='12'>\r\n            <h4 className='my-1'>People Group 2</h4>\r\n            <ReactSortable\r\n              tag='ul'\r\n              className='list-group list-group-flush sortable'\r\n              group='shared-multi-drag-group'\r\n              list={listArr2}\r\n              setList={setListArr2}\r\n            >\r\n              {listArr2.map(item => {\r\n                return (\r\n                  <ListGroupItem className='draggable' key={item.id}>\r\n                    <Media>\r\n                      <Media left tag='div'>\r\n                        <Media\r\n                          object\r\n                          src={item.img}\r\n                          className='rounded-circle mr-2'\r\n                          alt='Generic placeholder image'\r\n                          height='50'\r\n                          width='50'\r\n                        />\r\n                      </Media>\r\n                      <Media body>\r\n                        <h5 className='mt-0'>{item.name}</h5>\r\n                        {item.content}\r\n                      </Media>\r\n                    </Media>\r\n                  </ListGroupItem>\r\n                )\r\n              })}\r\n            </ReactSortable>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndMultiDrag\r\n","import { useState } from 'react'\r\nimport { ReactSortable } from 'react-sortablejs'\r\nimport img1 from '@src/assets/images/portrait/small/avatar-s-12.jpg'\r\nimport img2 from '@src/assets/images/portrait/small/avatar-s-1.jpg'\r\nimport img3 from '@src/assets/images/portrait/small/avatar-s-2.jpg'\r\nimport img4 from '@src/assets/images/portrait/small/avatar-s-3.jpg'\r\nimport img5 from '@src/assets/images/portrait/small/avatar-s-4.jpg'\r\nimport { Card, CardHeader, CardTitle, CardBody, CardText, ListGroupItem, Media } from 'reactstrap'\r\n\r\nconst listItems = [\r\n  {\r\n    id: '1',\r\n    img: img1,\r\n    name: 'Mary S. Navarre',\r\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n  },\r\n  {\r\n    id: '2',\r\n    img: img2,\r\n    name: 'Samuel M. Ellis',\r\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n  },\r\n  {\r\n    id: '3',\r\n    img: img3,\r\n    name: 'Sandra C. Toney',\r\n    content: 'Sugar plum fruitcake gummies marzipan liquorice tiramisu. Pastry liquorice chupa chupsake.'\r\n  },\r\n  {\r\n    id: '4',\r\n    img: img4,\r\n    name: 'Cleveland C. Goins',\r\n    content: 'Toffee powder marzipan tiramisu. Cake cake dessert danish.'\r\n  },\r\n  {\r\n    id: '5',\r\n    img: img5,\r\n    name: 'Linda M. English',\r\n    content: 'Chupa chups tiramisu apple pie biscuit sweet roll bonbon macaroon toffee icing.'\r\n  }\r\n]\r\n\r\nconst DndListGroup = () => {\r\n  const [listArr, setListArr] = useState(listItems)\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>Basic List Group Sortable</CardTitle>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardText>\r\n          The most basic list group is simply an unordered list with list items, and the proper classes.\r\n        </CardText>\r\n        <ReactSortable tag='ul' className='list-group' list={listArr} setList={setListArr}>\r\n          {listArr.map(item => {\r\n            return (\r\n              <ListGroupItem key={item.name}>\r\n                <Media>\r\n                  <Media left tag='div'>\r\n                    <Media\r\n                      object\r\n                      src={item.img}\r\n                      className='rounded-circle mr-2'\r\n                      alt='Generic placeholder image'\r\n                      height='50'\r\n                      width='50'\r\n                    />\r\n                  </Media>\r\n                  <Media body>\r\n                    <h5 className='mt-0'>{item.name}</h5>\r\n                    {item.content}\r\n                  </Media>\r\n                </Media>\r\n              </ListGroupItem>\r\n            )\r\n          })}\r\n        </ReactSortable>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default DndListGroup\r\n","import { Fragment } from 'react'\r\nimport DndClone from './DndClone'\r\nimport DndCards from './DndCards'\r\nimport DndHandle from './DndHandle'\r\nimport { Row, Col } from 'reactstrap'\r\nimport DndMultiple from './DndMultiple'\r\nimport DndMultiDrag from './DndMultiDrag'\r\nimport DndListGroup from './DndListGroup'\r\nimport ExtensionsHeader from '@components/extensions-header'\r\n\r\nimport '@styles/react/libs/drag-and-drop/drag-and-drop.scss'\r\n\r\nconst DragAndDrop = () => {\r\n  return (\r\n    <Fragment>\r\n      <ExtensionsHeader\r\n        title='React Sortablejs'\r\n        subTitle='Sortablejs wrapper for React'\r\n        link='https://github.com/SortableJS/react-sortablejs'\r\n      />\r\n      <Row>\r\n        <Col sm='12'>\r\n          <DndCards />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DndListGroup />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DndMultiple />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DndClone />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DndHandle />\r\n        </Col>\r\n        <Col sm='12'>\r\n          <DndMultiDrag />\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default DragAndDrop\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","// ** React Imports\r\nimport Proptypes from 'prop-types'\r\nimport { Row, Col } from 'reactstrap'\r\n\r\nconst ExtensionsHeader = props => {\r\n  return (\r\n    <Row className='mb-2'>\r\n      <Col sm='12' className='ml-50'>\r\n        <p className='font-medium-5 mt-1 extension-title' data-tour='extension-title'>\r\n          {props.title}\r\n        </p>\r\n        {props.link ? (\r\n          <a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n            {props.subTitle}\r\n          </a>\r\n        ) : (\r\n          <p className='text-primary'>{props.subTitle}</p>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\nexport default ExtensionsHeader\r\n\r\n// ** PropTypes\r\nExtensionsHeader.propTypes = {\r\n  title: Proptypes.string.isRequired,\r\n  subTitle: Proptypes.string.isRequired,\r\n  link: Proptypes.string\r\n}\r\n"],"sourceRoot":""}