{"version":3,"sources":["views/CustomComponents/SuperAdminPages/TenantChargeManage/EditModal.js","views/CustomComponents/SuperAdminPages/TenantChargeManage/CreateModal.js","views/CustomComponents/SuperAdminPages/TenantChargeManage/ListView.js","views/CustomComponents/CommonDataTable.js"],"names":["EditModal","modal","toggleModal","resetData","setReset","TenantChargeInfo","setTenantChargeInfo","useState","isLoading","setLoading","handleChange","e","target","name","value","Modal","isOpen","toggle","className","ModalHeader","ModalBody","Form","style","width","onSubmit","preventDefault","console","log","charge_name","charge_amount","id","useJwt","editTenantCharge","then","res","Success","catch","err","toast","error","response","data","errors","autoComplete","Col","md","FormGroup","Label","for","Input","required","type","placeholder","onChange","Button","Ripple","color","disabled","Spinner","size","CreateModal","userInput","setuserInput","createTenantCharge","MySwal","withReactContent","Swal","ListView","TableDataLoading","setTableDataLoading","TenantChargeList","setTenantChargeList","modalCreate","setModalCreate","toggleModalCreate","modalEdit","setModalEdit","toggleModalEdit","useEffect","TenantChargesList","payload","Error","column","minWidth","sortable","selector","row","cursor","onClick","fire","title","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","showLoaderOnConfirm","preConfirm","deleteTenantCharge","filter","x","buttonsStyling","result","isConfirmed","Card","CardHeader","CardTitle","tag","CardBody","Row","CommonDataTable","TableData","currentPage","setCurrentPage","noHeader","pagination","columns","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive"],"mappings":"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","file":"static/js/198.9ce2095a.chunk.js","sourcesContent":["import { Fragment, useState, useEffect, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical,\r\n    Edit, Archive, Trash, Search, ChevronLeft, Eye, XCircle, Facebook, Globe, Instagram, Twitter\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, CardBody, CustomInput, Table, Spinner, InputGroup, InputGroupAddon, InputGroupText, FormFeedback, Progress, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst EditModal = ({ modal, toggleModal, resetData, setReset, TenantChargeInfo, setTenantChargeInfo }) => {\r\n    // const [TenantChargeInfo, setTenantChargeInfo] = useState({\r\n    //     charge_name: '',\r\n    //     charge_amount: 0\r\n    // })\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        setTenantChargeInfo({ ...TenantChargeInfo, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(TenantChargeInfo)\r\n        const { charge_name, charge_amount, id } = TenantChargeInfo\r\n        setLoading(true)\r\n        useJwt.editTenantCharge({ charge_name, charge_amount, id }).then(res => {\r\n            console.log(res)\r\n            Success(res)\r\n            setLoading(false)\r\n            toggleModal()\r\n            setReset(!resetData)\r\n            // setTenantChargeInfo({})\r\n        }).catch(err => {\r\n            toast.error(err.response.data.errors)\r\n            // console.log(err.response.data.errors)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggleModal} className='modal-dialog-centered'>\r\n            <ModalHeader toggle={toggleModal}>Edit charge</ModalHeader>\r\n            <ModalBody>\r\n                <Form className=\"row\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Col md='12'>\r\n                        <FormGroup>\r\n                            <Label for=\"charge_name\">Charge Name</Label>\r\n                            <Input\r\n                                required\r\n                                type=\"text\"\r\n                                id='charge_name'\r\n                                name=\"charge_name\"\r\n                                placeholder=\"charge one\"\r\n                                value={TenantChargeInfo.charge_name}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md='12'>\r\n                        <FormGroup>\r\n                            <Label for=\"charge_amount\">Charge Amount</Label>\r\n                            <Input\r\n                                required\r\n                                type=\"number\"\r\n                                id='charge_amount'\r\n                                name=\"charge_amount\"\r\n                                placeholder=\"0.00\"\r\n                                value={TenantChargeInfo.charge_amount}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"12 text-center\">\r\n                        <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                            {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                        </Button.Ripple>\r\n                    </Col>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EditModal","import { Fragment, useState, useEffect, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical,\r\n    Edit, Archive, Trash, Search, ChevronLeft, Eye, XCircle, Facebook, Globe, Instagram, Twitter\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, CardBody, CustomInput, Table, Spinner, InputGroup, InputGroupAddon, InputGroupText, FormFeedback, Progress, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst CreateModal = ({ modal, toggleModal, resetData, setReset }) => {\r\n    const [userInput, setuserInput] = useState({\r\n        charge_name: '',\r\n        charge_amount: 0\r\n    })\r\n    const [isLoading, setLoading] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        setuserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        console.log(userInput)\r\n        const { charge_name, charge_amount } = userInput\r\n        setLoading(true)\r\n        useJwt.createTenantCharge({ charge_name, charge_amount }).then(res => {\r\n            console.log(res)\r\n            Success(res)\r\n            setLoading(false)\r\n            toggleModal()\r\n            setReset(!resetData)\r\n            setuserInput({})\r\n        }).catch(err => {\r\n            toast.error(err.response.data.errors)\r\n            // console.log(err.response.data.errors)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggleModal} className='modal-dialog-centered'>\r\n            <ModalHeader toggle={toggleModal}>Create new charge</ModalHeader>\r\n            <ModalBody>\r\n                <Form className=\"row\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <Col md='12'>\r\n                        <FormGroup>\r\n                            <Label for=\"charge_name\">Charge Name</Label>\r\n                            <Input\r\n                                required\r\n                                type=\"text\"\r\n                                id='charge_name'\r\n                                name=\"charge_name\"\r\n                                placeholder=\"charge one\"\r\n                                value={userInput.charge_name}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md='12'>\r\n                        <FormGroup>\r\n                            <Label for=\"charge_amount\">Charge Amount</Label>\r\n                            <Input\r\n                                required\r\n                                type=\"number\"\r\n                                id='charge_amount'\r\n                                name=\"charge_amount\"\r\n                                placeholder=\"0.00\"\r\n                                value={userInput.charge_amount}\r\n                                onChange={handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"12 text-center\">\r\n                        <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                            {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                        </Button.Ripple>\r\n                    </Col>\r\n                </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CreateModal","import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, CheckCircle, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { useHistory } from 'react-router-dom'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { toast } from 'react-toastify'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nimport CommonDataTable from '../../CommonDataTable'\r\nimport EditModal from './EditModal'\r\nimport CreateModal from './CreateModal'\r\n\r\nconst ListView = () => {\r\n    const [TableDataLoading, setTableDataLoading] = useState(true)\r\n    const [resetData, setReset] = useState(false)\r\n    const [TenantChargeList, setTenantChargeList] = useState([])\r\n    const [TenantChargeInfo, setTenantChargeInfo] = useState({})\r\n\r\n    const [modalCreate, setModalCreate] = useState(false)\r\n    const toggleModalCreate = () => setModalCreate(!modalCreate)\r\n\r\n    const [modalEdit, setModalEdit] = useState(false)\r\n    const toggleModalEdit = () => setModalEdit(!modalEdit)\r\n\r\n    useEffect(() => {\r\n        useJwt.TenantChargesList().then(res => {\r\n            console.log(res.data.payload)\r\n            setTenantChargeList(res.data.payload)\r\n            setTableDataLoading(false)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n            setTableDataLoading(false)\r\n        })\r\n    }, [resetData])\r\n    const handleDelete = (id, charge_amount) => {\r\n        // blockEstateTenantCharge\r\n        return MySwal.fire({\r\n            title: 'Are you sure to delete?',\r\n            text: `You won't be able to revert this`,\r\n            icon: 'warning',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-danger ml-1'\r\n            },\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: () => {\r\n                // console.log({ land_lord_id })\r\n                return useJwt.deleteTenantCharge({ id, charge_amount }).then(res => {\r\n                    console.log(res)\r\n                    Success(res)\r\n                    setTenantChargeList(TenantChargeList.filter(x => x.id !== id))\r\n                }).catch(err => {\r\n                    toast.error(err.response.data.errors)\r\n                    console.log(err)\r\n                })\r\n            },\r\n            buttonsStyling: false,\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        }).then(function (result) {\r\n            if (result.isConfirmed) {\r\n            }\r\n        })\r\n    }\r\n    const column = [\r\n        {\r\n            name: 'ID',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'id'\r\n        },\r\n        {\r\n            name: 'Name',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'charge_name'\r\n        },\r\n        {\r\n            name: 'Amount',\r\n            minWidth: '100px',\r\n            sortable: true,\r\n            selector: 'charge_amount'\r\n        },\r\n        {\r\n            name: 'Action',\r\n            minWidth: '100px',\r\n            // sortable: true,\r\n            selector: row => {\r\n                return row.id !== 1 ? <>\r\n                    <Edit size={15}\r\n                        color='seagreen'\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={(e) => {\r\n                            setTenantChargeInfo(row)\r\n                            toggleModalEdit()\r\n                        }}\r\n                    />&nbsp;&nbsp;\r\n                    <Trash size={15}\r\n                        color='crimson'\r\n                        style={{ cursor: 'pointer' }}\r\n                        onClick={(e) => handleDelete(row.id, row.charge_amount)}\r\n                    />\r\n                </> : ''\r\n            }\r\n        }\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Tenant Charge List</CardTitle>\r\n                    <CardTitle tag='h4'><Button.Ripple className='m-0' color='primary' type=\"button\" onClick={() => toggleModalCreate()}>\r\n                        Add New\r\n                    </Button.Ripple></CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md='12'>\r\n                            <CommonDataTable column={column} TableData={TenantChargeList} TableDataLoading={TableDataLoading} />\r\n                        </Col>\r\n                    </Row>\r\n                    <CreateModal\r\n                        toggleModal={toggleModalCreate}\r\n                        modal={modalCreate}\r\n                        resetData={resetData}\r\n                        setReset={setReset}\r\n                    />\r\n                    <EditModal\r\n                        toggleModal={toggleModalEdit}\r\n                        modal={modalEdit}\r\n                        resetData={resetData}\r\n                        setReset={setReset}\r\n                        setTenantChargeInfo={setTenantChargeInfo}\r\n                        TenantChargeInfo={TenantChargeInfo}\r\n                    />\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListView","import React, { Fragment, useState, useEffect } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink\r\n} from 'reactstrap'\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\n\r\nconst CommonDataTable = ({ column, TableData, TableDataLoading }) => {\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    // ** Function to handle Pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n    // ** Custom Pagination\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel=''\r\n            nextLabel=''\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={TableData.length ? TableData.length / 15 : 1}\r\n            breakLabel='...'\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName='active'\r\n            pageClassName='page-item'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            nextClassName='page-item next'\r\n            previousClassName='page-item prev'\r\n            previousLinkClassName='page-link'\r\n            pageLinkClassName='page-link'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        />\r\n    )\r\n    return (\r\n        <Fragment>\r\n            <DataTable\r\n                noHeader\r\n                pagination\r\n                /*selectableRows*/\r\n                columns={column}\r\n                paginationPerPage={15}\r\n                className='react-dataTable'\r\n                sortIcon={<ChevronDown size={10} />}\r\n                paginationDefaultPage={currentPage + 1}\r\n                paginationComponent={CustomPagination}\r\n                data={TableData}\r\n                progressPending={TableDataLoading}\r\n                progressComponent={<Spinner color='primary' />}\r\n                responsive={true}\r\n            /*selectableRowsComponent={BootstrapCheckbox}*/\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CommonDataTable"],"sourceRoot":""}