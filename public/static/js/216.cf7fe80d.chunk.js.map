{"version":3,"sources":["views/pages/authentication/MerchantLogin.js","views/viewhelper.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/CardText.js","@core/components/input-password-toggle/index.js"],"names":["MerchantLogin","useSkin","skin","ability","useContext","AbilityContext","dispatch","useDispatch","useHistory","useState","setEmail","setPassword","loading","setloading","servererrors","useForm","register","errors","handleSubmit","illustration","source","require","default","className","to","onClick","e","preventDefault","width","src","nagad","style","color","window","TukitakiThemeColor","lg","sm","alt","md","tag","onSubmit","data","email","password","isObjEmpty","useJwt","login","username","then","res","a","getPMStoken","module","localStorage","setItem","access_token","catch","err","console","log","getBMStoken","BMS_USER","BMS_PASS","jwtToken","userrole","parseInt","payload","user_info","roleid","fullname","avatar","accessToken","token","refreshToken","extras","eCommerceCartItemsCount","role","action","subject","handleLogin","update","AdminUsersAssignedMenus","AssignedMenus","JSON","stringify","location","href","getHomeRouteForLoggedInUser","response","toast","error","Error","for","autoFocus","type","id","name","placeholder","onChange","target","value","classnames","innerRef","required","validate","length","Ripple","block","disabled","size","status","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","Object","keys","Success","success","propTypes","tagPropType","PropTypes","string","cssModule","object","CardTitle","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","children","Spinner","CardText","InputPasswordToggle","label","hideIcon","showIcon","visible","htmlFor","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","addonType","renderIcon"],"mappings":"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","file":"static/js/216.cf7fe80d.chunk.js","sourcesContent":["import Avatar from '@components/avatar'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { useSkin } from '@hooks/useSkin'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { AbilityContext } from '@src/utility/context/Can'\r\nimport { handleLogin } from '@store/actions/auth'\r\nimport '@styles/base/pages/page-auth.scss'\r\nimport { getHomeRouteForLoggedInUser, isObjEmpty } from '@utils'\r\nimport classnames from 'classnames'\r\nimport { Fragment, useContext, useEffect, useState } from 'react'\r\nimport { Coffee } from 'react-feather'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { BMS_USER, BMS_PASS } from '../../../Configurables'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport {\r\n  Button, CardText, CardTitle, Col, Form, FormGroup, Input, Label, Row, Spinner\r\n} from 'reactstrap'\r\nimport nagad from '../../../assets/images/icons/nagad.png'\r\nimport { Error } from '../../viewhelper'\r\n\r\nconst ToastContent = ({ name, role }) => (\r\n  <Fragment>\r\n    <div className='toastify-header'>\r\n      <div className='title-wrapper'>\r\n        <Avatar size='sm' color='success' icon={<Coffee size={12} />} />\r\n        <h6 className='toast-title font-weight-bold'>Welcome, {name}</h6>\r\n      </div>\r\n    </div>\r\n    <div className='toastify-body'>\r\n      <span>You have successfully logged in as an {role} user to system. Now you can start to explore. Enjoy!</span>\r\n    </div>\r\n  </Fragment>\r\n)\r\nconst MerchantLogin = () => {\r\n  const [skin, setSkin] = useSkin()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setloading] = useState(false)\r\n  const [servererrors, seterrors] = useState({})\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  // useEffect(() => {\r\n  //   fetch('https://api.ipify.org/?format=json')\r\n  //     .then(res => res.json())\r\n  //     .then(data => localStorage.setItem('ip', data.ip))\r\n  // }, [])\r\n\r\n  const illustration = skin === 'dark' ? 'login-v2-dark.svg' : 'login-v2.svg',\r\n    source = require(`@src/assets/images/pages/${illustration}`).default\r\n\r\n  const onSubmit = data => {\r\n    const email = data['loginemail']\r\n    const password = data['login-password']\r\n    if (isObjEmpty(errors)) {\r\n      setloading(true)\r\n      useJwt\r\n        .login({ username: email, password })\r\n        .then(async res => {\r\n          await useJwt.getPMStoken({ username: \"dddd\", module: \"kkk\" }).then(res => {\r\n            localStorage.setItem('PMStoken', res.data.data.access_token)\r\n          }).catch(err => {\r\n            console.log('getPMStoken', err)\r\n          })\r\n\r\n          localStorage.setItem(\"BMSCall\", true)\r\n          await useJwt.getBMStoken({ username: BMS_USER, password: BMS_PASS }).then(res => {\r\n            localStorage.setItem('BMStoken', res.data.jwtToken)\r\n            localStorage.setItem(\"useBMStoken\", false)\r\n            localStorage.setItem(\"BMSCall\", false)\r\n          }).catch(err => {\r\n            localStorage.setItem(\"BMSCall\", false)\r\n            console.log(err)\r\n          })\r\n          // console.log('user_info', res.data.payload)\r\n          const userrole = parseInt(res.data.payload.user_info.roleid)\r\n          if (userrole === 12 || userrole === 13) {\r\n\r\n            const data = {\r\n              ...res.data.payload.user_info,\r\n              fullname: \"\",\r\n              avatar: \"https://i.imgur.com/P4b2RHh.png\",\r\n              accessToken: res.data.payload.token,\r\n              refreshToken: res.data.payload.token,\r\n              extras: {\r\n                eCommerceCartItemsCount: 5\r\n              },\r\n              role: 'admin'\r\n            }\r\n\r\n            //admin..\r\n            if (userrole === 12) {\r\n              data.role = 'admin'\r\n              data.ability = [\r\n                {\r\n                  action: 'manage',\r\n                  subject: 'ADMIN'\r\n                },\r\n                {\r\n                  action: 'manage',\r\n                  subject: 'Auth'\r\n                }\r\n              ]\r\n            } else {\r\n              //cashier..\r\n              data.role = 'cashier'\r\n              data.ability = [\r\n                {\r\n                  action: 'manage',\r\n                  subject: 'CASHIER'\r\n                },\r\n                {\r\n                  action: 'manage',\r\n                  subject: 'Auth'\r\n                }\r\n              ]\r\n            }\r\n\r\n            dispatch(handleLogin(data))\r\n            ability.update(data.ability)\r\n            localStorage.setItem('username', email)\r\n            useJwt.AdminUsersAssignedMenus().then(res => {\r\n              console.log('AdminUsersAssignedMenus', res.data.payload)\r\n              // setloading(false)\r\n              const AssignedMenus = res.data.payload\r\n              localStorage.setItem(\"AssignedMenus\", JSON.stringify(AssignedMenus))\r\n              window.location.href = getHomeRouteForLoggedInUser(data.role)\r\n              // history.push(getHomeRouteForLoggedInUser(data.role))\r\n              // toast.success(\r\n              //   <ToastContent name={data.username} role={data.role} />,\r\n              //   { transition: Slide, hideProgressBar: true, autoClose: 2000 }\r\n              // )\r\n            }).catch(err => {\r\n              console.log(err.response)\r\n            })\r\n          } else {\r\n            toast.error(`You don't have permission to login`)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setloading(false)\r\n          Error(err)\r\n          console.log(err.response)\r\n          // const e = err.response\r\n          // if (e.status === 404 || e.status === 401) {\r\n          //   toast.error(e.data.message)\r\n          // }yy\r\n        })\r\n    }\r\n  }\r\n  return (\r\n    <div className='auth-wrapper auth-v2'>\r\n      <Row className='auth-inner m-0'>\r\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\r\n\r\n          <img width='50px' src={nagad} />\r\n\r\n          <h2 style={{ color: window.TukitakiThemeColor }} className='brand-text ml-1 mt-1'>E-VMS Admin</h2>\r\n        </Link>\r\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\r\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\r\n            <img className='img-fluid' src={source} alt='Login V2' />\r\n          </div>\r\n        </Col>\r\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\r\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\r\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\r\n              Welcome to TukiTaki! 👋\r\n            </CardTitle>\r\n            <CardText className='mb-2'>Please sign-in to your account and start the adventure</CardText>\r\n            <Form className='auth-login-form mt-2' onSubmit={handleSubmit(onSubmit)}>\r\n              <FormGroup>\r\n                <Label className='form-label' for='login-email'>\r\n                  User Name\r\n                </Label>\r\n                <Input\r\n                  autoFocus\r\n                  type='text'\r\n                  // value={email}\r\n                  id='login-email'\r\n                  name='loginemail'\r\n                  placeholder='username'\r\n                  onChange={e => setEmail(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-email'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' })}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <div className='d-flex justify-content-between'>\r\n                  <Label className='form-label' for='login-password'>\r\n                    Password\r\n                  </Label>\r\n                </div>\r\n                <InputPasswordToggle\r\n                  // value={password}\r\n                  id='login-password'\r\n                  name='login-password'\r\n                  className='input-group-merge'\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  className={classnames({ 'is-invalid': errors['login-password'] })}\r\n                  innerRef={register({ required: true, validate: value => value !== '' && value.length > 5 })}\r\n                />\r\n                <span style={{ color: 'red' }} >{errors['login-password'] && \"Password must contain at least 6 characters, including 1 upper case,1 lower case, 1 number and a spatial character\"}</span>\r\n                <span style={{ color: 'red' }} >{servererrors['password']}</span>\r\n\r\n              </FormGroup>\r\n              {\r\n                loading ? <Button.Ripple color='primary' block disabled>\r\n                  <Spinner color='white' size='sm' />\r\n                  <span className='ml-50'>Loading...</span>\r\n                </Button.Ripple> : <Button.Ripple type='submit' color='primary' block>\r\n                  Sign in\r\n                </Button.Ripple>\r\n              }\r\n              <br></br>\r\n              <p className=\"text-center\" >Don't have an account &nbsp;<Link to=\"/merchantregister\">\r\n                Register\r\n              </Link>\r\n              </p>\r\n              <div className='divider my-2'>\r\n                <div className='divider-text'>or</div>\r\n              </div>\r\n              <p className=\"text-center\" >Login as &nbsp;<Link to=\"/login\">\r\n                Merchant\r\n              </Link>\r\n              </p>\r\n            </Form>\r\n\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nexport default MerchantLogin","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}