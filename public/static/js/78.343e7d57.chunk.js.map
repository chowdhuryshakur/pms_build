{"version":3,"sources":["views/forms/form-elements/input-groups/InputGroupBasic.js","views/forms/form-elements/input-groups/InputGroupMerged.js","views/forms/form-elements/input-groups/InputGroupSizes.js","views/forms/form-elements/input-groups/InputGroupCbAndRadio.js","views/forms/form-elements/input-groups/InputGroupButtons.js","views/forms/form-elements/input-groups/InputGroupDropdown.js","views/forms/form-elements/input-groups/InputGroupSourceCode.js","views/forms/form-elements/input-groups/index.js","@core/components/breadcrumbs/index.js","../node_modules/reactstrap/es/ButtonDropdown.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","../node_modules/reactstrap/es/UncontrolledButtonDropdown.js","@core/components/card-snippet/index.js","../node_modules/reactstrap/es/Label.js","@core/components/input-password-toggle/index.js","../node_modules/reactstrap/es/InputGroupButtonDropdown.js"],"names":["InputGroupBasic","InputGroup","className","InputGroupAddon","addonType","InputGroupText","size","Input","placeholder","label","htmlFor","type","InputGroupMerged","InputGroupSizes","InputGroupCbAndRadio","Row","Col","md","sm","CustomInput","id","InputGroupButtons","Button","color","outline","InputGroupDropdowns","useState","dropdownOpen","setDropdownOpen","dropdownIcon","setDropdownIcon","dropdownRight","setDropdownRight","FormGroup","InputGroupButtonDropdown","isOpen","toggle","DropdownToggle","caret","DropdownMenu","DropdownItem","disabled","divider","inputGroupBasic","inputGroupMerged","inputGroupCBRadio","inputGroupButtons","inputGroupDropdowns","inputGroupSizes","InputGroups","useEffect","Prism","highlightAll","breadCrumbTitle","breadCrumbParent","breadCrumbActive","title","code","InputGroupDropdown","BreadCrumbs","props","breadCrumbParent2","breadCrumbParent3","tag","to","active","right","Link","propTypes","children","PropTypes","node","ButtonDropdown","React","createElement","Dropdown","_extends","group","stringOrNumberProp","oneOfType","number","string","columnProps","bool","shape","order","offset","tagPropType","xs","lg","xl","cssModule","object","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","isObject","_classNames","colSizeInterfix","colClass","push","mapToCssModules","classNames","_colClass","length","classes","inverse","body","innerRef","func","Card","ref","CardBody","rowColsPropType","noGutters","form","CardTitle","CardHeader","listTag","listClassName","Breadcrumb","ListTag","listClasses","BreadcrumbItem","undefined","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","omitKeys","UncontrolledButtonDropdown","_Component","_this","call","this","state","defaultOpen","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","setState","render","omit","Component","target","arguments","source","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectSpread","CardSnippet","noBody","iconCode","setIsOpen","IconCode","Wrapper","Fragment","onClick","hidden","check","for","Label","InputPasswordToggle","hideIcon","showIcon","visible","iconSize","inputClassName","rest","inputVisibility","setInputVisibility","classnames","renderIcon","oneOf","isRequired"],"mappings":"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","file":"static/js/78.343e7d57.chunk.js","sourcesContent":["import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>@</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupAddon addonType='append'>\r\n          <InputGroupText>@example.com</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>$</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n","import { Fragment } from 'react'\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='merge-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>@</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupAddon addonType='append'>\r\n          <InputGroupText>@example.com</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>$</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n","import { Fragment } from 'react'\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n","import { InputGroup, InputGroupAddon, Input, InputGroupText, Row, Col, CustomInput } from 'reactstrap'\r\n\r\nconst InputGroupCbAndRadio = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <input type='checkbox' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <input type='radio' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <small className='font-weight-semibold w-100 ml-1 my-1'>Custom checkbox and radio</small>\r\n      <Col className='mb-md-0 mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <CustomInput type='checkbox' label='' id='exampleCustomCheckbox' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <CustomInput type='radio' label='' id='exampleCustomRadio' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupCbAndRadio\r\n","import { Button, InputGroup, InputGroupAddon, Input, Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <Input placeholder='Button on right side' />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button color='primary' outline>\r\n              Go\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <Button color='primary' outline>\r\n              <Search size={12} />\r\n            </Button>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Button on both sides' />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button color='primary' outline>\r\n              Search !\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n","import { useState } from 'react'\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  InputGroupButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  FormGroup\r\n} from 'reactstrap'\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n              <DropdownToggle color='primary' caret outline>\r\n                Action\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n                <DropdownItem className='w-100' disabled>\r\n                  Action\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' divider />\r\n                <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n            <Input />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n              <DropdownToggle color='primary' caret outline>\r\n                <Edit size={12} />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n                <DropdownItem className='w-100' disabled>\r\n                  Action\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' divider />\r\n                <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n            <Input />\r\n            <InputGroupButtonDropdown addonType='append' isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n              <DropdownToggle color='primary' outline caret>\r\n                Action\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem className='w-100'>Action 1</DropdownItem>\r\n                <DropdownItem className='w-100' disabled>\r\n                  Action\r\n                </DropdownItem>\r\n                <DropdownItem className='w-100' divider />\r\n                <DropdownItem className='w-100'>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n","export const inputGroupBasic = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupBasic = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>@</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupAddon addonType='append'>\r\n          <InputGroupText>@example.com</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>$</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupBasic\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupMerged = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Search } from 'react-feather'\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText } from 'reactstrap'\r\n\r\nconst InputGroupMerged = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>\r\n            <Search size={14} />\r\n          </InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='search...' />\r\n      </InputGroup>\r\n      <InputPasswordToggle className='input-group-merge mb-2' label='Password' htmlFor='basic-default-password' />\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>@</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='Username' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <Input placeholder=\"Recipient's username\" />\r\n        <InputGroupAddon addonType='append'>\r\n          <InputGroupText>@example.com</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>https://example.com/users/</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merge mb-2'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>$</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input placeholder='100' />\r\n      </InputGroup>\r\n      <InputGroup className='input-group-merg'>\r\n        <InputGroupAddon addonType='prepend'>\r\n          <InputGroupText>With textarea</InputGroupText>\r\n        </InputGroupAddon>\r\n        <Input type='textarea' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupMerged\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupCBRadio = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Row, Col, CustomInput } from 'reactstrap'\r\n\r\nconst InputGroupCbAndRadio = () => {\r\n  return (\r\n    <Row>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <input type='checkbox' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <input type='radio' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <small className='font-weight-semibold w-100 ml-1 my-1'>Custom checkbox and radio</small>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <CustomInput type='checkbox' label='' id='exampleCustomCheckbox' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n      <Col md='6' sm='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <InputGroupText>\r\n              <CustomInput type='radio' label='' id='exampleCustomRadio' />\r\n            </InputGroupText>\r\n          </InputGroupAddon>\r\n          <Input type='text' placeholder='Message' />\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupCbAndRadio\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupButtons = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { Button, InputGroup, InputGroupAddon, Input, FormGroup, Row, Col } from 'reactstrap'\r\nimport { Search } from 'react-feather'\r\n\r\nconst InputGroupButtons = () => {\r\n  return (\r\n    <Row>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n          <Input />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button color='primary' outline>\r\n              Go\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </Col>\r\n      <Col className='mb-1' lg='6' md='12'>\r\n        <InputGroup>\r\n          <InputGroupAddon addonType='prepend'>\r\n            <Button color='primary' outline>\r\n              <Search size={12} />\r\n            </Button>\r\n          </InputGroupAddon>\r\n          <Input type='text' />\r\n          <InputGroupAddon addonType='append'>\r\n            <Button color='primary' outline>\r\n              Search !\r\n            </Button>\r\n          </InputGroupAddon>\r\n        </InputGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupButtons\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupDropdowns = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\nimport React, { useState } from 'react'\r\nimport {\r\n  InputGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  InputGroupButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  FormGroup\r\n} from 'reactstrap'\r\nimport { Edit } from 'react-feather'\r\n\r\nconst InputGroupDropdowns = () => {\r\n  const [dropdownOpen, setDropdownOpen] = useState(false)\r\n  const [dropdownIcon, setDropdownIcon] = useState(false)\r\n  const [dropdownRight, setDropdownRight] = useState(false)\r\n\r\n  const toggleDropDown = () => {\r\n    setDropdownOpen(!dropdownOpen)\r\n  }\r\n  const toggleDropdownIcon = () => {\r\n    setDropdownIcon(!dropdownIcon)\r\n  }\r\n  const toggleDropDownRight = () => {\r\n    setDropdownRight(!dropdownRight)\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg='6' md='12'>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownOpen} toggle={toggleDropDown}>\r\n              <DropdownToggle color='primary' caret outline>\r\n                Action\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem>Action 1</DropdownItem>\r\n                <DropdownItem disabled>Action</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n            <Input />\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n      <Col lg='6' md='12'>\r\n        <FormGroup>\r\n          <InputGroup>\r\n            <InputGroupButtonDropdown addonType='prepend' isOpen={dropdownIcon} toggle={toggleDropdownIcon}>\r\n              <DropdownToggle color='primary' caret outline>\r\n                <Edit size={12} />\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem>Action 1</DropdownItem>\r\n                <DropdownItem disabled>Action</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n            <Input />\r\n            <InputGroupButtonDropdown addonType='append' isOpen={dropdownRight} toggle={toggleDropDownRight}>\r\n              <DropdownToggle color='primary' outline caret>\r\n                Action\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem>Action 1</DropdownItem>\r\n                <DropdownItem disabled>Action</DropdownItem>\r\n                <DropdownItem divider />\r\n                <DropdownItem>Another Action</DropdownItem>\r\n              </DropdownMenu>\r\n            </InputGroupButtonDropdown>\r\n          </InputGroup>\r\n        </FormGroup>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default InputGroupDropdowns\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const inputGroupSizes = (\r\n  <pre>\r\n    <code className='language-jsx'>\r\n      {`\r\n\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap'\r\n\r\nconst InputGroupSizes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <InputGroup className='mb-1' size='lg'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup className='mb-1'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n\r\n      <InputGroup size='sm'>\r\n        <InputGroupAddon addonType='prepend'>@</InputGroupAddon>\r\n        <Input placeholder='username' />\r\n      </InputGroup>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default InputGroupSizes\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import { Fragment, useEffect } from 'react'\r\nimport { Row, Col } from 'reactstrap'\r\nimport Prism from 'prismjs'\r\nimport Breadcrumbs from '@components/breadcrumbs'\r\nimport Card from '@components/card-snippet'\r\nimport InputGroupBasic from './InputGroupBasic'\r\nimport InputGroupMerged from './InputGroupMerged'\r\nimport InputGroupSizes from './InputGroupSizes'\r\nimport InputCbAndRadio from './InputGroupCbAndRadio'\r\nimport InputGroupButtons from './InputGroupButtons'\r\nimport InputGroupDropdown from './InputGroupDropdown'\r\nimport {\r\n  inputGroupBasic,\r\n  inputGroupMerged,\r\n  inputGroupSizes,\r\n  inputGroupCBRadio,\r\n  inputGroupButtons,\r\n  inputGroupDropdowns\r\n} from './InputGroupSourceCode'\r\n\r\nconst InputGroups = () => {\r\n  useEffect(() => {\r\n    Prism.highlightAll()\r\n  })\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumbs breadCrumbTitle='Input Groups' breadCrumbParent='Form Elements' breadCrumbActive='InputGroups' />\r\n      <Row className='match-height'>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Basic' code={inputGroupBasic}>\r\n            <InputGroupBasic />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Merged' code={inputGroupMerged}>\r\n            <InputGroupMerged />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Sizing' code={inputGroupSizes}>\r\n            <InputGroupSizes />\r\n          </Card>\r\n        </Col>\r\n        <Col md='6' sm='12'>\r\n          <Card title='Checkbox & Radio' code={inputGroupCBRadio}>\r\n            <InputCbAndRadio />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group with Buttons' code={inputGroupButtons}>\r\n            <InputGroupButtons />\r\n          </Card>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <Card title='Input Group Dropdowns' code={inputGroupDropdowns}>\r\n            <InputGroupDropdown />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default InputGroups\r\n","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Third Party Components\r\nimport Proptypes from 'prop-types'\r\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  UncontrolledButtonDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle\r\n} from 'reactstrap'\r\n\r\nconst BreadCrumbs = props => {\r\n  // ** Props\r\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\r\n\r\n  return (\r\n    <div className='content-header row'>\r\n      <div className='content-header-left col-md-9 col-12 mb-2'>\r\n        <div className='row breadcrumbs-top'>\r\n          <div className='col-12'>\r\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\r\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\r\n              <Breadcrumb>\r\n                <BreadcrumbItem tag='li'>\r\n                  <Link to='/'>Home</Link>\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem tag='li' className='text-primary'>\r\n                  {breadCrumbParent}\r\n                </BreadcrumbItem>\r\n                {breadCrumbParent2 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent2}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {breadCrumbParent3 ? (\r\n                  <BreadcrumbItem tag='li' className='text-primary'>\r\n                    {breadCrumbParent3}\r\n                  </BreadcrumbItem>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <BreadcrumbItem tag='li' active>\r\n                  {breadCrumbActive}\r\n                </BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\r\n        <div className='form-group breadcrum-right dropdown'>\r\n          <UncontrolledButtonDropdown>\r\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\r\n              <Grid size={14} />\r\n            </DropdownToggle>\r\n            <DropdownMenu tag='ul' right>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <CheckSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Todo</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/chat'>\r\n                <MessageSquare className='mr-1' size={14} />\r\n                <span className='align-middle'>Chat</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/email'>\r\n                <Mail className='mr-1' size={14} />\r\n                <span className='align-middle'>Email</span>\r\n              </DropdownItem>\r\n              <DropdownItem tag={Link} to='/apps/calendar'>\r\n                <Calendar className='mr-1' size={14} />\r\n                <span className='align-middle'>Calendar</span>\r\n              </DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledButtonDropdown>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default BreadCrumbs\r\n\r\n// ** PropTypes\r\nBreadCrumbs.propTypes = {\r\n  breadCrumbTitle: Proptypes.string.isRequired,\r\n  breadCrumbActive: Proptypes.string.isRequired\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  children: PropTypes.node\n};\n\nvar ButtonDropdown = function ButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    group: true\n  }, props));\n};\n\nButtonDropdown.propTypes = propTypes;\nexport default ButtonDropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), /*#__PURE__*/React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonDropdown from './ButtonDropdown';\nimport { omit } from './utils';\nvar omitKeys = ['defaultOpen'];\n\nvar UncontrolledButtonDropdown = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledButtonDropdown, _Component);\n\n  function UncontrolledButtonDropdown(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = UncontrolledButtonDropdown.prototype;\n\n  _proto.toggle = function toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(ButtonDropdown, _extends({\n      isOpen: this.state.isOpen,\n      toggle: this.toggle\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledButtonDropdown;\n}(Component);\n\nexport { UncontrolledButtonDropdown as default };\nUncontrolledButtonDropdown.propTypes = _objectSpread({\n  defaultOpen: PropTypes.bool\n}, ButtonDropdown.propTypes);","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport { Code } from 'react-feather'\r\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\r\n\r\nconst CardSnippet = props => {\r\n  // ** Props\r\n  const { title, children, noBody, code, iconCode } = props\r\n\r\n  // ** State\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  // ** If user passes custom icon then render that else render default icon\r\n  const IconCode = iconCode ? iconCode : <Code size={15} />\r\n\r\n  // ** To toggle collapse\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\r\n  const Wrapper = noBody ? Fragment : CardBody\r\n\r\n  return (\r\n    <Card className='card-snippet'>\r\n      <CardHeader>\r\n        <CardTitle tag='h4'>{title}</CardTitle>\r\n        <div className='views cursor-pointer' onClick={toggle}>\r\n          {IconCode}\r\n        </div>\r\n      </CardHeader>\r\n      <Wrapper>{children}</Wrapper>\r\n      <Collapse isOpen={isOpen}>\r\n        <CardBody>{code}</CardBody>\r\n      </Collapse>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default CardSnippet\r\n\r\n// ** PropTypes\r\nCardSnippet.propTypes = {\r\n  className: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.any,\r\n  code: PropTypes.node,\r\n  iconCode: PropTypes.node,\r\n  noBody: PropTypes.bool\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : '············'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from './Dropdown';\nvar propTypes = {\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node\n};\n\nvar InputGroupButtonDropdown = function InputGroupButtonDropdown(props) {\n  return /*#__PURE__*/React.createElement(Dropdown, props);\n};\n\nInputGroupButtonDropdown.propTypes = propTypes;\nexport default InputGroupButtonDropdown;"],"sourceRoot":""}