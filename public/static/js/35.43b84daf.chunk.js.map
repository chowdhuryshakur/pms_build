{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/BulkNotification/CreateBulkNotification.js","views/viewhelper.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/Label.js"],"names":["CreateBulkNotification","useState","pointRuleloading","setPointRuleloading","groupList","setGroupList","channelList","setChannelList","selectedGroup","setSelectedGroup","user","JSON","parse","localStorage","getItem","group_id","title","body","userInput","setUserInput","handleChange","e","target","name","value","useEffect","useJwt","getNotificationGroupList","then","res","console","log","data","payload","GroupList","catch","err","Error","getCampaignChannelList","role","Ripple","className","color","tag","Link","to","size","style","marginRight","paddingTop","width","onSubmit","preventDefault","parseInt","createBulkNotification","response","Success","error","autoComplete","sm","for","theme","selectThemeColors","maxMenuHeight","classNamePrefix","label","onChange","selected","options","map","g","id","group_name","type","required","placeholder","c","bulk_notification","check","checked","key_name","channel_name","disabled","marginTop","status","toast","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","propTypes","children","PropTypes","node","inline","bool","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","props","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","Spinner","stringOrNumberProp","number","columnProps","shape","order","offset","hidden","xs","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length"],"mappings":"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","file":"static/js/35.43b84daf.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { divIcon } from 'leaflet'\r\n\r\nconst CreateBulkNotification = () => {\r\n    const [pointRuleloading, setPointRuleloading] = useState(false)\r\n    const [groupList, setGroupList] = useState([])\r\n    const [channelList, setChannelList] = useState([])\r\n    const [selectedGroup, setSelectedGroup] = useState({})\r\n    const user = JSON.parse(localStorage.getItem('userData'))\r\n    const [userInput, setUserInput] = useState({\r\n        group_id: 0,\r\n        title: '',\r\n        body: ''\r\n    })\r\n        \r\n    const handleChange = (e) => {\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n    useEffect(() => {\r\n        useJwt.getNotificationGroupList().then(res => {\r\n            console.log(res)\r\n            setGroupList(res.data.payload.GroupList)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n        useJwt.getCampaignChannelList().then(res => {\r\n            console.log(res)\r\n            setChannelList(res.data.payload)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        let { group_id } = userInput\r\n        group_id = parseInt(selectedGroup.value)\r\n        setPointRuleloading(true)\r\n        useJwt.createBulkNotification({ ...userInput, group_id }).then((response) => {\r\n            setPointRuleloading(false)\r\n            Success(response)\r\n          }).catch((error) => {\r\n            setPointRuleloading(false)\r\n            Error(error)\r\n            console.log(error.response)\r\n          })\r\n    }\r\n    return (\r\n        <Fragment>\r\n              {\r\n                user.role === 'vendor' ?   <Button.Ripple className='mb-1' color='primary' tag={Link} to='/allBulkNotificationsVendor' >\r\n                <div className='d-flex align-items-center'>\r\n                        <ChevronLeft size={17} style={{marginRight:'5px'}}/>\r\n                        <span >Back</span>\r\n                </div>\r\n                </Button.Ripple> :   <Button.Ripple className='mb-1' color='primary' tag={Link} to='/allBulkNotifications' >\r\n                    <div className='d-flex align-items-center'>\r\n                            <ChevronLeft size={17} style={{marginRight:'5px'}}/>\r\n                            <span >Back</span>\r\n                    </div>\r\n                    </Button.Ripple>\r\n            }\r\n          \r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Create Bulk Notification</CardTitle>\r\n                    \r\n                </CardHeader>\r\n                <CardBody style={{ paddingTop: '15px' }}>\r\n                    <Form className=\"row\" style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\r\n                    <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"groups\">Group</Label>\r\n                                <Select\r\n                                    theme={selectThemeColors}\r\n                                    maxMenuHeight={200}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    value={{ value: selectedGroup.value, label: selectedGroup.label ? selectedGroup.label : 'select a group'}}\r\n                                    onChange={(selected) => {\r\n                                        setSelectedGroup({ value: selected.value,  label: selected.label})\r\n                                    }}\r\n                                    options={groupList?.map(g => { return {value: g.id, label: g.group_name} })}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"title\">Title</Label>\r\n                                <Input type=\"text\"\r\n                                    name=\"title\"\r\n                                    id='title'\r\n                                    value={userInput.title}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"your title\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"body\">body</Label>\r\n                                <Input type=\"textarea\"\r\n                                    name=\"body\"\r\n                                    id='body'\r\n                                    value={userInput.body}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"your message\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"6\"/>\r\n                        {\r\n                            channelList.map(c => c.bulk_notification && <Col key={c.id} sm=\"2\" className='mb-1'>\r\n                                    <FormGroup check>\r\n                                        <Input onChange={(e) => {\r\n                                                if (e.target.checked) { \r\n                                                    setUserInput({ ...userInput, [c.key_name]: true })\r\n                                                } else {\r\n                                                    setUserInput({ ...userInput, [c.key_name]: false })\r\n                                                }\r\n                                            }\r\n                                        } type='checkbox' id='channels' />\r\n                                        <Label for='channels' check>\r\n                                            {c.channel_name}\r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                \r\n                            \r\n                        )}\r\n\r\n                        <Col sm=\"12\" className='text-center'>\r\n                            {\r\n                                pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\r\n                                    <Spinner color='white' size='sm' />\r\n                                    <span className='ml-50'>Loading...</span>\r\n                                </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\r\n                                    <span >Submit</span>\r\n                                </Button.Ripple>\r\n                            }\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateBulkNotification","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}