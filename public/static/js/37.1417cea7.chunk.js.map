{"version":3,"sources":["views/CustomComponents/EstateAdminPages/ContractorPages/EditContractor.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/Form.js","views/CustomComponents/ImgUpload.js"],"names":["withReactContent","Swal","EditContractor","history","useHistory","userRole","useRef","JSON","parse","localStorage","getItem","role","contractorTypeRef","addressRef","EditContractorInfo","useState","imgUpLoading","setimgUpLoading","photo","uid","name","status","type","url","fileUrls","setFileUrls","previewVisible","previewImage","previewTitle","fileList","state","setState","isLoading","setLoading","postcode","setPostCode","searching","setSearching","ukaddress","setukaddress","sub_estate_manager_id","user_id","contractor_type_id","contractor_link","contractor_type","contractor_type_name","type_name","mobile","email","full_name","address","userInput","setUserInput","setBranchList","contractorTypeList","setcontractorTypeList","useEffect","useJwt","BranchList","then","res","data","payload","catch","err","Error","console","log","ContractorTypeList","error","seterror","handleChange","e","chkEmail","test","target","value","Ripple","className","color","onClick","push","size","tag","style","width","onSubmit","preventDefault","toast","length","submitData","contractor_id","substring","editContractor","Success","autoComplete","md","for","required","id","placeholder","onChange","addonType","PHONE_PREFIX","autoFocus","minLength","String","maxLength","fontSize","ref","theme","selectThemeColors","classNamePrefix","maxMenuHeight","selected","label","options","map","x","isClearable","opacity","height","onFocus","current","select","focus","outline","ukAddressEndpoint","postCode","addresses","element","building_number","thoroughfare","locality","town_or_city","disabled","propTypes","tagPropType","inverse","PropTypes","bool","string","body","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","stringOrNumberProp","number","columnProps","shape","order","offset","children","node","hidden","check","xs","sm","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","inline","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","ImgUpload","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","a","preview","originFileObj","lastIndexOf","uploadButton","beforeUpload","isLt2M","isJpgOrPng","formData","FormData","append","singleFileupload","fileurl","action","IMG_BASE_URL","listType","onPreview","filter","some","b","includes","visible","title","footer","onCancel","alt","src"],"mappings":"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","file":"static/js/37.1417cea7.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport ImgUpload from '../../ImgUpload'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst EditContractor = () => {\r\n    const history = useHistory()\r\n    const branch_idRef = useRef()\r\n    const userRole = JSON.parse(localStorage.getItem('userData')).role\r\n    const contractorTypeRef = useRef()\r\n    const addressRef = useRef()\r\n    const EditContractorInfo = JSON.parse(localStorage.getItem('EditContractorInfo'))\r\n    const [imgUpLoading, setimgUpLoading] = useState(false)\r\n    const [fileUrls, setFileUrls] = useState(EditContractorInfo.photo ? [\r\n        {\r\n            uid: 1,\r\n            name: 'image.png',\r\n            status: 'done',\r\n            type: \"image/jpeg\",\r\n            url: EditContractorInfo.photo\r\n        }\r\n    ] : [])\r\n    const [state, setState] = useState({\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: EditContractorInfo.photo ? [\r\n            {\r\n                uid: 1,\r\n                name: 'image.png',\r\n                status: 'done',\r\n                type: \"image/jpeg\",\r\n                url: EditContractorInfo.photo\r\n            }\r\n        ] : []\r\n    })\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [postcode, setPostCode] = useState('')\r\n    const [searching, setSearching] = useState(false)\r\n    const [ukaddress, setukaddress] = useState([])\r\n    const [userInput, setUserInput] = useState({\r\n        sub_estate_manager_id: EditContractorInfo.user_id,\r\n        contractor_type_id: EditContractorInfo.contractor_link.contractor_type.contractor_type_id,\r\n        contractor_type_name: EditContractorInfo.contractor_link.contractor_type.type_name,\r\n        mobile: EditContractorInfo.mobile,\r\n        email: EditContractorInfo.email,\r\n        full_name: EditContractorInfo.full_name,\r\n        address: EditContractorInfo.address\r\n    })\r\n    const [BranchList, setBranchList] = useState([])\r\n    const [contractorTypeList, setcontractorTypeList] = useState([])\r\n    useEffect(() => {\r\n        useJwt.BranchList().then(res => {\r\n            // console.log(res.data.payload)\r\n            setBranchList(res.data.payload)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n        useJwt.ContractorTypeList().then(res => {\r\n            console.log(res.data.payload)\r\n            setcontractorTypeList(res.data.payload)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    const handlePostCodeSearch = e => {\r\n        e.preventDefault()\r\n        setSearching(true)\r\n        useJwt.ukAddressEndpoint({ postCode: postcode }).then(res => {\r\n            console.log(res.data.payload)\r\n            // const { latitude, longitude } = res.data.payload\r\n            // setUserInput({ ...userInput, latitude, longitude })\r\n            setukaddress(res.data.payload.addresses.map(element => `${element.building_number}, ${element.thoroughfare}, ${element.locality}, ${element.town_or_city}`))\r\n            setSearching(false)\r\n        }).catch(err => {\r\n            setukaddress([])\r\n            setSearching(false)\r\n            Error(err)\r\n        })\r\n    }\r\n    const [error, seterror] = useState({\r\n        email: false,\r\n        mobile: false\r\n    })\r\n    const handleChange = e => {\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n        // Email Validator\r\n        if (e.target.name === 'email' && chkEmail) {\r\n            seterror({ ...error, email: false })\r\n        }\r\n        if (e.target.name === 'email' && !chkEmail) {\r\n            seterror({ ...error, email: true })\r\n        }\r\n        //mobile number validator\r\n        if (e.target.name === \"mobile\") {\r\n            // console.log(e.target.value)\r\n            // if (e.target.value[0] === '0') {\r\n            //     seterror({ ...error, mobile: true })\r\n            //     return 0\r\n            // } else {\r\n            //     seterror({ ...error, mobile: false })\r\n            // }\r\n            if (!/^[0-9]*$/.test(e.target.value)) {\r\n                return 0\r\n            }\r\n        }\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (imgUpLoading) {\r\n            toast.error('please wait, image is uploading to the server')\r\n            return 0\r\n        }\r\n        if (!fileUrls.length) {\r\n            toast.error('please upload Contractor image')\r\n            return 0\r\n        }\r\n        const { sub_estate_manager_id, mobile, email, full_name, address, contractor_type_id } = userInput\r\n\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(email)\r\n        if (!chkEmail) {\r\n            return 0\r\n        }\r\n        const photo = fileUrls.length ? fileUrls[0].url : null\r\n        const submitData = {\r\n            contractor_id: sub_estate_manager_id,\r\n            contractor_type_id,\r\n            mobile: mobile.length === 11 ? mobile.substring(1) : mobile,\r\n            email,\r\n            full_name,\r\n            address,\r\n            photo\r\n        }\r\n        console.log(submitData)\r\n        setLoading(true)\r\n        useJwt.editContractor(submitData).then(res => {\r\n            console.log(res)\r\n            Success(res)\r\n            history.push(`/${userRole}/ContractorList`)\r\n            setLoading(false)\r\n        }).catch(err => {\r\n            Error(err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Button.Ripple className='ml-1 mb-1' color='primary' onClick={e => history.push(`/${userRole}/ContractorList`)}>\r\n                <ChevronLeft size={12} /> Back\r\n            </Button.Ripple>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Update Contractor</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form className=\"row pt-1\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label for=\"full_name\">Fullname</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"text\"\r\n                                    id='full_name'\r\n                                    name=\"full_name\"\r\n                                    placeholder=\"Contractor name\"\r\n                                    value={userInput.full_name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label className='form-label' for='mobile'>\r\n                                    Mobile Number\r\n                                </Label>\r\n                                <InputGroup className='input-group-merge w-100 mb-1'>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                            {PHONE_PREFIX}\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        required\r\n                                        type='text'\r\n                                        minLength={String(userInput.mobile)[0] === '0' ? 11 : 10}\r\n                                        maxLength={String(userInput.mobile)[0] === '0' ? 11 : 10}\r\n                                        id='mobile'\r\n                                        name='mobile'\r\n                                        value={userInput.mobile}\r\n                                        onChange={handleChange}\r\n                                        placeholder='123-456-7899'\r\n                                    />\r\n                                </InputGroup>\r\n                                {error.mobile && <span style={{ color: 'red', fontSize: '11px' }}>First digit 0 not allow</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    id='email'\r\n                                    name=\"email\"\r\n                                    placeholder=\"example@gmail.com\"\r\n                                    value={userInput.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {error.email && userInput.email && <span style={{ color: 'red', fontSize: '11px' }}>Please Enter a valid Email</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label>Select a Contractor Type</Label>\r\n                                <><Select\r\n                                    ref={contractorTypeRef}\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    name='contractor_type_id'\r\n                                    maxMenuHeight={150}\r\n                                    onChange={selected => {\r\n                                        setUserInput({ ...userInput, contractor_type_id: selected.value, contractor_type_name: selected.label })\r\n                                    }}\r\n                                    options={contractorTypeList.map(x => { return { value: x.id, label: x.type_name } })}\r\n                                    value={{ value: userInput.contractor_type_id, label: userInput.contractor_type_name }}\r\n                                    // isDisabled={!ukaddress.length}\r\n                                    isClearable={false}\r\n                                /><Input\r\n                                        required\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            width: \"100%\",\r\n                                            height: 0\r\n                                            // position: \"absolute\"\r\n                                        }}\r\n                                        onFocus={e => contractorTypeRef.current.select.focus()}\r\n                                        value={userInput.contractor_type_id || ''}\r\n                                        onChange={e => ''}\r\n                                    /></> </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md='4' >\r\n                            <Label for=\"postcode\">Search Address by Post Code</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    // required\r\n                                    type=\"text\"\r\n                                    id='postcode'\r\n                                    name=\"postcode\"\r\n                                    placeholder=\"post code\"\r\n                                    value={postcode}\r\n                                    onChange={e => setPostCode(e.target.value)}\r\n                                />\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline type='button' onClick={handlePostCodeSearch}>\r\n                                        {searching ? <Spinner size='sm' /> : 'Search'}\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <Label>Address</Label>\r\n                            <Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                isClearable={false}\r\n                            />\r\n                            {/* {ukaddress.length ? <><Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                isClearable={false}\r\n                            /><Input\r\n                                    required\r\n                                    style={{\r\n                                        opacity: 0,\r\n                                        width: \"100%\",\r\n                                        height: 0\r\n                                        // position: \"absolute\"\r\n                                    }}\r\n                                    onFocus={e => addressRef.current.select.focus()}\r\n                                    value={userInput.address || ''}\r\n                                    onChange={e => ''}\r\n                                /></> : <Input\r\n                                required\r\n                                type=\"text\"\r\n                                id='address'\r\n                                name=\"address\"\r\n                                placeholder=\"address\"\r\n                                value={userInput.address}\r\n                                onChange={handleChange}\r\n                            />} */}\r\n                        </Col>\r\n\r\n                        <Col md='12' className='my-0'>\r\n                            <Label>Contractor Image</Label>\r\n                            <ImgUpload\r\n                                setimgUpLoading={setimgUpLoading}\r\n                                state={state}\r\n                                setState={setState}\r\n                                fileUrls={fileUrls}\r\n                                setFileUrls={setFileUrls} />\r\n                        </Col>\r\n                        <Col md=\"12 text-center\">\r\n                            <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                                {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                            </Button.Ripple>\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditContractor","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import React, { useState } from 'react'\r\nimport { Upload, Modal } from 'antd'\r\n// import { PlusOutlined } from '@ant-design/icons'\r\nimport 'antd/dist/antd.css'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Camera } from 'react-feather'\r\nimport { Error } from '../viewhelper'\r\nimport { IMG_BASE_URL } from '../Configuarables'\r\n\r\nconst ImgUpload = ({ fileUrls, setFileUrls, state, setState, setimgUpLoading }) => {\r\n    // const [fileUrls, setFileUrls] = useState([])\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n    // const [state, setState] = useState({\r\n    //     previewVisible: false,\r\n    //     previewImage: '',\r\n    //     previewTitle: '',\r\n    //     fileList: []\r\n    // })\r\n    const { previewVisible, previewImage, fileList, previewTitle } = state\r\n    const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj)\r\n        }\r\n        setState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n        })\r\n    }\r\n    const handleChange = ({ fileList, file }) => {\r\n        // console.log(fileList, fileUrls)\r\n        if (file.size / 1024 / 1024 > 2) {\r\n            return 0\r\n        }\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n        if (!isJpgOrPng) {\r\n            return 0\r\n        }\r\n        setFileUrls(fileUrls.filter(a => fileList.some(b => a.uid === b.uid)))\r\n        setState({ ...state, fileList: fileList.filter(x => x.type.includes('image')) })\r\n    }\r\n    const uploadButton = (\r\n        <div className='text-center p-1' style={{ height: '102px', width: '102px' }}>\r\n            <span ><Camera size={20} className='my-1' /></span> <br />\r\n            <span>Add Image</span>\r\n        </div>\r\n        // <div>\r\n        //     <PlusOutlined />\r\n        //     <div style={{ marginTop: 8 }}>Upload</div>\r\n        // </div>\r\n    )\r\n    const props = {\r\n        beforeUpload: file => {\r\n            const isLt2M = file.size / 1024 / 1024 < 2\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n            if (!isJpgOrPng) {\r\n                toast.error(`${file.name} is not a Image file`)\r\n            } else if (!isLt2M) {\r\n                toast.error('Image must smaller than 2MB!')\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('complain_image', file)\r\n                setimgUpLoading(true)\r\n                useJwt.singleFileupload(formData).then(res => {\r\n                    console.log(res.data.payload.fileurl)\r\n                    setimgUpLoading(false)\r\n                    setFileUrls([\r\n                        ...fileUrls,\r\n                        {\r\n                            uid: file.uid,\r\n                            name: 'image.png',\r\n                            status: 'done',\r\n                            type: \"image/jpeg\",\r\n                            url: res.data.payload.fileurl\r\n                        }\r\n                    ])\r\n                }).catch(err => {\r\n                    setimgUpLoading(false)\r\n                    console.log(err)\r\n                    Error(err)\r\n                })\r\n                return isJpgOrPng && isLt2M\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Upload\r\n                {...props}\r\n                action={`${IMG_BASE_URL}/api/fackupload`}\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgUpload"],"sourceRoot":""}