{"version":3,"sources":["views/CustomComponents/EstateAdminPages/LandLordPages/EditLandlord.js","views/CustomComponents/ImgUpload.js"],"names":["withReactContent","Swal","EditLandlord","history","useHistory","addressRef","useRef","EditLandlordInfo","JSON","parse","localStorage","getItem","userRole","role","useState","imgUpLoading","setimgUpLoading","photo","uid","name","status","type","url","fileUrls","setFileUrls","previewVisible","previewImage","previewTitle","fileList","state","setState","isLoading","setLoading","postcode","setPostCode","searching","setSearching","ukaddress","setukaddress","sub_estate_manager_id","user_id","mobile","email","full_name","address","userInput","setUserInput","setBranchList","useEffect","useJwt","BranchList","then","res","console","log","data","payload","catch","err","Error","error","seterror","handleChange","e","chkEmail","test","target","value","Ripple","className","color","onClick","push","size","tag","style","width","onSubmit","preventDefault","toast","length","submitData","land_lord_id","editLandlord","Success","autoComplete","md","for","required","id","placeholder","onChange","addonType","PHONE_PREFIX","autoFocus","minLength","maxLength","fontSize","outline","ukAddressEndpoint","postCode","addresses","map","element","building_number","thoroughfare","locality","town_or_city","ref","theme","selectThemeColors","classNamePrefix","selected","options","x","label","maxMenuHeight","isClearable","disabled","ImgUpload","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","a","preview","originFileObj","substring","lastIndexOf","uploadButton","height","props","beforeUpload","isLt2M","isJpgOrPng","formData","FormData","append","singleFileupload","fileurl","action","IMG_BASE_URL","listType","onPreview","filter","some","b","includes","visible","title","footer","onCancel","alt","src"],"mappings":"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","file":"static/js/42.82b14324.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport ImgUpload from '../../ImgUpload'\r\nconst MySwal = withReactContent(Swal)\r\n// {/* editLandlord */}\r\n\r\nconst EditLandlord = () => {\r\n    const history = useHistory()\r\n    const branch_idRef = useRef()\r\n    const addressRef = useRef()\r\n    const EditLandlordInfo = JSON.parse(localStorage.getItem('EditLandlordInfo'))\r\n    const userRole = JSON.parse(localStorage.getItem('userData')).role\r\n    const [imgUpLoading, setimgUpLoading] = useState(false)\r\n    const [fileUrls, setFileUrls] = useState(EditLandlordInfo.photo ? [\r\n        {\r\n            uid: 1,\r\n            name: 'image.png',\r\n            status: 'done',\r\n            type: \"image/jpeg\",\r\n            url: EditLandlordInfo.photo\r\n        }\r\n    ] : [])\r\n    const [state, setState] = useState({\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: EditLandlordInfo.photo ? [\r\n            {\r\n                uid: 1,\r\n                name: 'image.png',\r\n                status: 'done',\r\n                type: \"image/jpeg\",\r\n                url: EditLandlordInfo.photo\r\n            }\r\n        ] : []\r\n    })\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [postcode, setPostCode] = useState('')\r\n    const [searching, setSearching] = useState(false)\r\n    const [ukaddress, setukaddress] = useState([])\r\n    const [userInput, setUserInput] = useState({\r\n        sub_estate_manager_id: EditLandlordInfo.user_id,\r\n        mobile: EditLandlordInfo.mobile,\r\n        email: EditLandlordInfo.email,\r\n        full_name: EditLandlordInfo.full_name,\r\n        address: EditLandlordInfo.address\r\n    })\r\n    const [BranchList, setBranchList] = useState([])\r\n    useEffect(() => {\r\n        useJwt.BranchList().then(res => {\r\n            console.log(res.data.payload)\r\n            setBranchList(res.data.payload)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    const handlePostCodeSearch = e => {\r\n        e.preventDefault()\r\n        setSearching(true)\r\n        useJwt.ukAddressEndpoint({ postCode: postcode }).then(res => {\r\n            console.log(res.data.payload)\r\n            // const { latitude, longitude } = res.data.payload\r\n            // setUserInput({ ...userInput, latitude, longitude })\r\n            setukaddress(res.data.payload.addresses.map(element => `${element.building_number}, ${element.thoroughfare}, ${element.locality}, ${element.town_or_city}`))\r\n            setSearching(false)\r\n        }).catch(err => {\r\n            setukaddress([])\r\n            setSearching(false)\r\n            Error(err)\r\n        })\r\n    }\r\n    const [error, seterror] = useState({\r\n        email: false,\r\n        mobile: false\r\n    })\r\n    const handleChange = e => {\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n        // Email Validator\r\n        if (e.target.name === 'email' && chkEmail) {\r\n            seterror({ ...error, email: false })\r\n        }\r\n        if (e.target.name === 'email' && !chkEmail) {\r\n            seterror({ ...error, email: true })\r\n        }\r\n        //mobile number validator\r\n        if (e.target.name === \"mobile\") {\r\n            // console.log(e.target.value)\r\n            if (e.target.value[0] === '0') {\r\n                seterror({ ...error, mobile: true })\r\n                return 0\r\n            } else {\r\n                seterror({ ...error, mobile: false })\r\n            }\r\n            if (!/^[0-9]*$/.test(e.target.value)) {\r\n                return 0\r\n            }\r\n        }\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        if (imgUpLoading) {\r\n            toast.error('please wait, image is uploading to the server')\r\n            return 0\r\n        }\r\n        if (!fileUrls.length) {\r\n            toast.error('please upload Landlord image')\r\n            return 0\r\n        }\r\n        const { sub_estate_manager_id, mobile, email, full_name, address } = userInput\r\n\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(email)\r\n        if (!chkEmail) {\r\n            return 0\r\n        }\r\n        const photo = fileUrls.length ? fileUrls[0].url : null\r\n        const submitData = {\r\n            land_lord_id: sub_estate_manager_id,\r\n            mobile,\r\n            email,\r\n            full_name,\r\n            address,\r\n            photo\r\n        }\r\n        console.log(submitData)\r\n        setLoading(true)\r\n        useJwt.editLandlord(submitData).then(res => {\r\n            console.log(res)\r\n            Success(res)\r\n            history.push(`/${userRole}/LandlordList`)\r\n            setLoading(false)\r\n        }).catch(err => {\r\n            Error(err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Button.Ripple className='m-1' color='primary' onClick={e => history.push(`/${userRole}/LandlordList`)}>\r\n                <ChevronLeft size={12} /> Back\r\n            </Button.Ripple>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Update Landlord</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form className=\"row pt-1\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label for=\"full_name\">Fullname</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"text\"\r\n                                    id='full_name'\r\n                                    name=\"full_name\"\r\n                                    placeholder=\"Landlord name\"\r\n                                    value={userInput.full_name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label className='form-label' for='mobile'>\r\n                                    Mobile Number\r\n                                </Label>\r\n                                <InputGroup className='input-group-merge w-100 mb-1'>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                            {PHONE_PREFIX}\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        required\r\n                                        type='text'\r\n                                        minLength={10}\r\n                                        maxLength={10}\r\n                                        id='mobile'\r\n                                        name='mobile'\r\n                                        value={userInput.mobile}\r\n                                        onChange={handleChange}\r\n                                        placeholder='123-456-7899'\r\n                                    />\r\n                                </InputGroup>\r\n                                {error.mobile && <span style={{ color: 'red', fontSize: '11px' }}>First digit 0 not allow</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    id='email'\r\n                                    name=\"email\"\r\n                                    placeholder=\"example@gmail.com\"\r\n                                    value={userInput.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {error.email && userInput.email && <span style={{ color: 'red', fontSize: '11px' }}>Please Enter a valid Email</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {/* <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label>Select a Branch</Label>\r\n                                <><Select\r\n                                    ref={branch_idRef}\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    name='sub_estate_manager_id'\r\n                                    maxMenuHeight={150}\r\n                                    onChange={selected => {\r\n                                        setUserInput({ ...userInput, sub_estate_manager_id: selected.value })\r\n                                    }}\r\n                                    options={BranchList.map(x => { return { value: x.estate_manager_info.user_id, label: x.branch_name } })}\r\n                                    // value={{ value: userInput.sub_estate_manager_id, label: userInput.sub_estate_manager_id }}\r\n                                    isDisabled={true}\r\n                                    isClearable={false}\r\n                                /><Input\r\n                                        required\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            width: \"100%\",\r\n                                            height: 0\r\n                                            // position: \"absolute\"\r\n                                        }}\r\n                                        onFocus={e => branch_idRef.current.select.focus()}\r\n                                        value={userInput.sub_estate_manager_id || ''}\r\n                                        onChange={e => ''}\r\n                                    /></> </FormGroup>\r\n                        </Col> */}\r\n\r\n                        <Col md='6' >\r\n                            <Label for=\"postcode\">Search Address by Post Code</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    // required\r\n                                    type=\"text\"\r\n                                    id='postcode'\r\n                                    name=\"postcode\"\r\n                                    placeholder=\"post code\"\r\n                                    value={postcode}\r\n                                    onChange={e => setPostCode(e.target.value)}\r\n                                />\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline type='button' onClick={handlePostCodeSearch}>\r\n                                        {searching ? <Spinner size='sm' /> : 'Search'}\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col md='6' >\r\n                            <Label>Address</Label>\r\n                            <Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                maxMenuHeight={150}\r\n                                isClearable={false}\r\n                            />\r\n                            {/* {ukaddress.length ? <><Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                isClearable={false}\r\n                            /><Input\r\n                                    required\r\n                                    style={{\r\n                                        opacity: 0,\r\n                                        width: \"100%\",\r\n                                        height: 0\r\n                                        // position: \"absolute\"\r\n                                    }}\r\n                                    onFocus={e => addressRef.current.select.focus()}\r\n                                    value={userInput.address || ''}\r\n                                    onChange={e => ''}\r\n                                /></> : <Input\r\n                                required\r\n                                type=\"text\"\r\n                                id='address'\r\n                                name=\"address\"\r\n                                placeholder=\"address\"\r\n                                value={userInput.address}\r\n                                onChange={handleChange}\r\n                            />}*/}\r\n                        </Col>\r\n\r\n                        <Col md='12' className='my-0'>\r\n                            <Label>Landlord Image</Label>\r\n                            <ImgUpload\r\n                                setimgUpLoading={setimgUpLoading}\r\n                                state={state}\r\n                                setState={setState}\r\n                                fileUrls={fileUrls}\r\n                                setFileUrls={setFileUrls} />\r\n                        </Col>\r\n                        <Col md=\"12 text-center\">\r\n                            <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                                {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                            </Button.Ripple>\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default EditLandlord","import React, { useState } from 'react'\r\nimport { Upload, Modal } from 'antd'\r\n// import { PlusOutlined } from '@ant-design/icons'\r\nimport 'antd/dist/antd.css'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Camera } from 'react-feather'\r\nimport { Error } from '../viewhelper'\r\nimport { IMG_BASE_URL } from '../Configuarables'\r\n\r\nconst ImgUpload = ({ fileUrls, setFileUrls, state, setState, setimgUpLoading }) => {\r\n    // const [fileUrls, setFileUrls] = useState([])\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n    // const [state, setState] = useState({\r\n    //     previewVisible: false,\r\n    //     previewImage: '',\r\n    //     previewTitle: '',\r\n    //     fileList: []\r\n    // })\r\n    const { previewVisible, previewImage, fileList, previewTitle } = state\r\n    const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj)\r\n        }\r\n        setState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n        })\r\n    }\r\n    const handleChange = ({ fileList, file }) => {\r\n        // console.log(fileList, fileUrls)\r\n        if (file.size / 1024 / 1024 > 2) {\r\n            return 0\r\n        }\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n        if (!isJpgOrPng) {\r\n            return 0\r\n        }\r\n        setFileUrls(fileUrls.filter(a => fileList.some(b => a.uid === b.uid)))\r\n        setState({ ...state, fileList: fileList.filter(x => x.type.includes('image')) })\r\n    }\r\n    const uploadButton = (\r\n        <div className='text-center p-1' style={{ height: '102px', width: '102px' }}>\r\n            <span ><Camera size={20} className='my-1' /></span> <br />\r\n            <span>Add Image</span>\r\n        </div>\r\n        // <div>\r\n        //     <PlusOutlined />\r\n        //     <div style={{ marginTop: 8 }}>Upload</div>\r\n        // </div>\r\n    )\r\n    const props = {\r\n        beforeUpload: file => {\r\n            const isLt2M = file.size / 1024 / 1024 < 2\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n            if (!isJpgOrPng) {\r\n                toast.error(`${file.name} is not a Image file`)\r\n            } else if (!isLt2M) {\r\n                toast.error('Image must smaller than 2MB!')\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('complain_image', file)\r\n                setimgUpLoading(true)\r\n                useJwt.singleFileupload(formData).then(res => {\r\n                    console.log(res.data.payload.fileurl)\r\n                    setimgUpLoading(false)\r\n                    setFileUrls([\r\n                        ...fileUrls,\r\n                        {\r\n                            uid: file.uid,\r\n                            name: 'image.png',\r\n                            status: 'done',\r\n                            type: \"image/jpeg\",\r\n                            url: res.data.payload.fileurl\r\n                        }\r\n                    ])\r\n                }).catch(err => {\r\n                    setimgUpLoading(false)\r\n                    console.log(err)\r\n                    Error(err)\r\n                })\r\n                return isJpgOrPng && isLt2M\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Upload\r\n                {...props}\r\n                action={`${IMG_BASE_URL}/api/fackupload`}\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgUpload"],"sourceRoot":""}