{"version":3,"sources":["views/tables/data-tables/basic/AdminComponent/ServicePointRuleManagement/CreateServicePointRule.js","views/viewhelper.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/Label.js"],"names":["CreateServicePointRule","useState","pointRuleloading","setPointRuleloading","value","label","userType","setUserType","serviceType","setServiceType","service_type","user_type","amount","is_range","start_range","end_range","is_active","expiry_date","receiver_point","sender_point","userInput","setUserInput","handleChange","e","target","name","Ripple","className","color","tag","Link","to","size","style","marginRight","paddingTop","width","onSubmit","preventDefault","localStorage","setItem","useJwt","setServicePointRule","then","response","console","log","Success","catch","error","Error","autoComplete","sm","for","theme","selectThemeColors","maxMenuHeight","classNamePrefix","onChange","selected","options","type","id","required","placeholder","check","checked","disabled","marginTop","err","status","toast","data","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","success","propTypes","children","PropTypes","node","inline","bool","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","props","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","Component","defaultProps","Spinner","role","stringOrNumberProp","number","columnProps","shape","order","offset","hidden","xs","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","length"],"mappings":"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","file":"static/js/244.fed076d1.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Error, Success, ErrorMessage } from '../../../../../viewhelper'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { divIcon } from 'leaflet'\r\n\r\nconst CreateServicePointRule = () => {\r\n    const [pointRuleloading, setPointRuleloading] = useState(false)\r\n    const [userType, setUserType] = useState({ value: '', label: 'select a user type' })\r\n    const [serviceType, setServiceType] = useState({ value: '', label: 'select a service type' })\r\n    const [userInput, setUserInput] = useState({\r\n        service_type  : '',\r\n        user_type  :'',\r\n        amount: 0,\r\n        is_range: 0, //bit 0 mean false 1 mean true\r\n        start_range: 0,\r\n        end_range: 0,\r\n        is_active: 0, //bit 0 mean false 1 mean true\r\n        expiry_date: null,\r\n        receiver_point : 0,\r\n        sender_point  : 0\r\n    })\r\n    const handleChange = (e) => {\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n  \r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        localStorage.setItem('usePMStoken', true)\r\n        const { amount, start_range, end_range, expiry_date, is_active, is_range, receiver_point, sender_point } = userInput\r\n        let { service_type, user_type } = userInput\r\n        service_type = serviceType.value\r\n        user_type = userType.value\r\n        setPointRuleloading(true)\r\n        useJwt.setServicePointRule({ service_type, user_type, amount, start_range, end_range, expiry_date, is_active, is_range, receiver_point, sender_point}).then((response) => {\r\n            setPointRuleloading(false)\r\n            localStorage.setItem('usePMStoken', false)\r\n            console.log(response)\r\n            Success(response)\r\n          }).catch((error) => {\r\n            setPointRuleloading(false)\r\n            localStorage.setItem('usePMStoken', false)\r\n            Error(error)\r\n            console.log(error)\r\n          })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Button.Ripple className='mb-1' color='primary' tag={Link} to='/servicePointRuleList' >\r\n                    <div className='d-flex align-items-center'>\r\n                            <ChevronLeft size={17} style={{marginRight:'5px'}}/>\r\n                            <span >Back</span>\r\n                    </div>\r\n                    </Button.Ripple>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Set Service Point Rule</CardTitle>\r\n                    \r\n                </CardHeader>\r\n                <CardBody style={{ paddingTop: '15px' }}>\r\n                    <Form className=\"row\" style={{ width: '100%' }} onSubmit={onSubmit} autoComplete=\"off\">\r\n                        <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"isrange\">Service Type</Label>\r\n                                <Select\r\n                                    theme={selectThemeColors}\r\n                                    maxMenuHeight={200}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    value={{ value: serviceType.value, label: serviceType.label }}\r\n                                    onChange={(selected) => {\r\n                                        setServiceType({ value: selected.value, label: selected.label })\r\n                                    }}\r\n                                    options={[\r\n                                        { value: 'cashin', label: 'Cash In' }, { value: 'cashout', label: 'Cash Out' }, { value: 'FundTransfer', label: 'Fund Transfer' }, \r\n                                             { value: 'MerchantPayment', label: 'Merchant Payment' }, { value: 'CustomerInitiatedBillPayment', label: 'Customer Initiated Bill Payment' },\r\n                                             { value: 'CustomerMobileRecharge', label: 'Customer Mobile Recharge'}\r\n                                            ]}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"isrange\">User Type</Label>\r\n                                <Select\r\n                                    theme={selectThemeColors}\r\n                                    maxMenuHeight={200}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    value={{ value: userType.value, label: userType.label }}\r\n                                    onChange={(selected) => {\r\n                                        setUserType({ value: selected.value, label: selected.label })\r\n                                    }}\r\n                                    options={[{ value: 's', label: 'Sender' }, { value: 'r', label: 'Receiver' }, { value: 'b', label: 'Both Sender & Receiver' }]}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"amount\">Amount</Label>\r\n                                <Input type=\"number\"\r\n                                    name=\"amount\"\r\n                                    id='amount'\r\n                                    value={userInput.amount}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"0\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {userType.value === 'r' || userType.value === 'b' ? <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"receiver_point\">Receiver Point</Label>\r\n                                <Input type=\"number\"\r\n                                    name=\"receiver_point\"\r\n                                    id='receiver_point'\r\n                                    value={userInput.receiver_point}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"0\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col> : null}\r\n                        {userType.value === 's' || userType.value === 'b' ? <Col sm=\"6\" >\r\n                            <FormGroup>\r\n                                <Label for=\"sender_point\">Sender Point</Label>\r\n                                <Input type=\"number\"\r\n                                    name=\"sender_point\"\r\n                                    id='sender_point'\r\n                                    value={userInput.sender_point}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"0\"\r\n                                />\r\n                            </FormGroup>\r\n                        </Col> : null}\r\n                        <Col sm=\"6\" >\r\n                             <FormGroup>\r\n                                 <Label for=\"expiry_date\">Expiry Date</Label>\r\n                                 <Input type=\"date\"\r\n                                    name=\"expiry_date\"\r\n                                    id='expiry_date'\r\n                                    value={userInput.expiry_date ? userInput.expiry_date : 'select a date'}\r\n                                    onChange={handleChange}\r\n                                    required\r\n                                    placeholder=\"0\"\r\n                                  />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col sm=\"12\" className='mb-1'>\r\n                            <FormGroup check>\r\n                                <Input onChange={(e) => {\r\n                                        if (e.target.checked) { \r\n                                            setUserInput({ ...userInput, is_active: true })\r\n                                        } else {\r\n                                            setUserInput({ ...userInput, is_active: false })\r\n                                        }\r\n                                    }\r\n                                } type='checkbox' id='isFinancial' />\r\n                                <Label for='isFinancial' check>\r\n                                    Is Active\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>               \r\n                        <Col sm=\"12\" className='mb-1'>\r\n                            <FormGroup check>\r\n                                <Input onChange={(e) => {\r\n                                        if (e.target.checked) { \r\n                                            setUserInput({ ...userInput, is_range: true })\r\n                                        } else {\r\n                                            setUserInput({ ...userInput, is_range: false })\r\n                                        }\r\n                                    }\r\n                                } type='checkbox' id='isFinancial' />\r\n                                <Label for='isFinancial' check>\r\n                                Is Range\r\n                                </Label>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {userInput.is_range ?  <Col sm=\"6\" >\r\n                                    <FormGroup>\r\n                                        <Label for=\"start_range\">Start Range</Label>\r\n                                        <Input type=\"number\"\r\n                                            name=\"start_range\"\r\n                                            id='start_range'\r\n                                            value={userInput.start_range}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                            placeholder=\"0\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col> : null}\r\n                        { userInput.is_range ? <Col sm=\"6\" >\r\n                                    <FormGroup>\r\n                                        <Label for=\"end_range\">End Range</Label>\r\n                                        <Input type=\"number\"\r\n                                            name=\"end_range\"\r\n                                            id='end_range'\r\n                                            value={userInput.end_range}\r\n                                            onChange={handleChange}\r\n                                            required\r\n                                            placeholder=\"0\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col> : null}\r\n                        <Col sm=\"12\" className='text-center'>\r\n                            {\r\n                                pointRuleloading ? <Button.Ripple color='primary' className='mr-1' disabled style={{ marginTop: '25px' }}>\r\n                                    <Spinner color='white' size='sm' />\r\n                                    <span className='ml-50'>Loading...</span>\r\n                                </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\" style={{ marginTop: '25px' }}>\r\n                                    <span >Submit</span>\r\n                                </Button.Ripple>\r\n                            }\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateServicePointRule","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}