{"version":3,"sources":["views/VendorComponents/ProductManage/UpdateProduct.js","views/viewhelper.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardTitle.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/Spinner.js","../node_modules/reactstrap/es/Label.js"],"names":["ProductDetails","BusinessList","JSON","parse","localStorage","getItem","history","useHistory","productID","useParams","useState","isLoading","setisLoading","setImgs","ProdDetails","setProdDetails","setOpFixedData","setOpDynamicData","setOpDynamicDataEntity","AdditionalInfoData","setAdditionalInfoData","setAdditionalInfoValues","productTypeName","setproductTypeName","setChildSubCatName","setBusinessName","setAditionalEntityLabalNames","setOptionalEntityLabalNames","setOptionalEntityKeyNames","producttypedynamicinfo","setproducttypedynamicinfo","useEffect","useJwt","SingleProductDetailsApi","productid","then","res","data","payload","is_budget","discount_budget","MainData","console","log","label","find","x","id","business_id","businessname","value","product_optional_image","product_type_id","optional_data","ChildSubcategoryListAPi","Number","child_subcategory_id","name","catch","err","ProductTypeListAPi","Data11","labal_names","dynamic_labal_names","dynamic_key_names","type_name","aditnlData","additional_fixed_data","map","i","entity_name","additional_dynamic_data","p","newOBJ","key","includes","String","newX","aditnlDynamicData","response","Error","Ripple","className","color","onClick","e","goBack","size","productname","style","width","onSubmit","preventDefault","updateproductApi","push","Success","autoComplete","tag","md","min","type","discount_percent","onChange","target","Date","discount_startdate","toLocaleDateString","discount_enddate","required","discount_quota","zIndex","checked","placeholder","singleobj","index","mainIndex","keys","Object","showkeys","border","every","s_obj","s_index","alv","replace","toUpperCase","old","product_quantity","RRP","product_price","backgroundColor","height","marginTop","borderRadius","disabled","sm","active","status","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","success","propTypes","tagPropType","PropTypes","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardTitle","rowColsPropType","number","noGutters","bool","form","xs","lg","xl","widths","Row","colClasses","forEach","colWidth","colSize","isXs","stringOrNumberProp","columnProps","shape","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","inverse","body","outline","Card","children","node","inline","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","Spinner","role","hidden","check","for","Label","htmlFor"],"mappings":"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","file":"static/js/165.b0df43cf.chunk.js","sourcesContent":["import { Fragment, useState, useEffect, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical,\r\n    Edit, Archive, Trash, Search, ChevronLeft, Eye, XCircle, Facebook, Globe, Instagram, Twitter\r\n} from 'react-feather'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, ncontrolledDropdown, CardBody, CustomInput, Table, Spinner, InputGroup, InputGroupAddon, nputGroupText, FormFeedback, Progress, Modal, ModalHeader, ModalBody, ModalFooter\r\n} from 'reactstrap'\r\nimport InputGroupText from 'reactstrap/lib/InputGroupText'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { toast, Slide } from 'react-toastify'\r\nimport { Error, Success, ErrorMessage } from '../../viewhelper'\r\nimport 'antd/dist/antd.css'\r\nimport { Tag, Skeleton } from 'antd'\r\n\r\nconst ProductDetails = () => {\r\n    const BusinessList = JSON.parse(localStorage.getItem('customerBusinesses'))\r\n    const history = useHistory()\r\n    const { productID } = useParams()\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [Imgs, setImgs] = useState([])\r\n    const [ProdDetails, setProdDetails] = useState({})\r\n    const [OpFixedData, setOpFixedData] = useState({})\r\n    const [OpDynamicData, setOpDynamicData] = useState([])\r\n    const [OpDynamicDataEntity, setOpDynamicDataEntity] = useState([])\r\n    const [AdditionalInfoData, setAdditionalInfoData] = useState([])\r\n    const [AdditionalInfoValues, setAdditionalInfoValues] = useState({})\r\n    const [productTypeName, setproductTypeName] = useState('')\r\n    const [ChildSubCatName, setChildSubCatName] = useState('')\r\n    const [BusinessName, setBusinessName] = useState('')\r\n    const [aditional_entity_labal_names, setAditionalEntityLabalNames] = useState([])\r\n    const [optional_entity_labal_names, setOptionalEntityLabalNames] = useState([])\r\n    const [optional_entity_key_names, setOptionalEntityKeyNames] = useState([])\r\n    const [producttypedynamicinfo, setproducttypedynamicinfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        useJwt.SingleProductDetailsApi({ productid: productID }).then(res => {\r\n            setProdDetails({ ...res.data.payload, is_budget: !!res.data.payload.discount_budget })\r\n            const MainData = res.data.payload\r\n            console.log('main data ', MainData)\r\n            setBusinessName(\r\n                {\r\n                    label: BusinessList.find(x => x.id === MainData.business_id).businessname,\r\n                    value: BusinessList.find(x => x.id === MainData.business_id).businessname\r\n                }\r\n            )\r\n            const { product_optional_image, product_type_id, optional_data } = MainData\r\n            if (!product_type_id) {\r\n                setOpFixedData(optional_data[0])\r\n            }\r\n            setImgs(product_optional_image)\r\n            // Child sub cat list api \r\n            useJwt.ChildSubcategoryListAPi().then(res => {\r\n\r\n                setChildSubCatName(res.data.payload.find(x => x.id === Number(MainData.child_subcategory_id)).name)\r\n\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n            // product list api fetch \r\n            useJwt.ProductTypeListAPi({ product_type_id }).then(res => {\r\n                const Data11 = res.data.payload, labal_names = [], dynamic_labal_names = [], dynamic_key_names = []\r\n                setproductTypeName(Data11[0].type_name)\r\n\r\n                const aditnlData = Data11[0].additional_fixed_data.map((x, i) => {\r\n                    labal_names[i] = x.label\r\n                    return x.entity_name\r\n                })\r\n                Data11[0].additional_dynamic_data.map((x, i) => {\r\n                    dynamic_labal_names[i] = x.label\r\n                    dynamic_key_names[i] = x.entity_name\r\n                })\r\n                //console.log(\"Prodtype\", Data11)\r\n\r\n                const p = { ...MainData.optional_data[0] }\r\n                const newOBJ = {}\r\n                for (const key in p) {\r\n                    if (aditnlData.includes(String(key))) {\r\n                        newOBJ[key] = p[key]\r\n                    }\r\n                }\r\n                // console.log(\"newOBJ\", newOBJ, aditnlData)\r\n                // console.log(\"opd\", aditnlDynamicData, optional_data.map(x => {\r\n                //     const newX = {}\r\n                //     for (const key in x) {\r\n                //         if (aditnlDynamicData.includes(String(key))) {\r\n                //             newX[key] = x[key]\r\n                //         }\r\n                //     }\r\n                //     return newX\r\n                // })\r\n                // )\r\n                setOpDynamicData(optional_data.map(x => {\r\n                    const newX = {}\r\n                    for (const key in x) {\r\n                        if (aditnlDynamicData.includes(String(key))) {\r\n                            newX[key] = x[key]\r\n                        }\r\n                    }\r\n                    return newX\r\n                }))\r\n                setOpDynamicDataEntity(aditnlDynamicData)\r\n                setAdditionalInfoValues(newOBJ)\r\n                setAdditionalInfoData(aditnlData)\r\n                setAditionalEntityLabalNames(labal_names)\r\n\r\n                setOptionalEntityKeyNames(dynamic_key_names)\r\n                setOptionalEntityLabalNames(dynamic_labal_names)\r\n\r\n                setproducttypedynamicinfo(Data11[0].additional_dynamic_data)\r\n\r\n\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n        }).catch(err => {\r\n            console.log(err.response)\r\n            Error(err)\r\n        })\r\n    }, [])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log('ProdDetails', ProdDetails)\r\n        setisLoading(true)\r\n        useJwt.updateproductApi(ProdDetails).then(res => {\r\n            setisLoading(false)\r\n            // history.goBack()\r\n            history.push('/allproduct')\r\n            Success(res)\r\n        }).catch(err => {\r\n            setisLoading(false)\r\n            console.log(err)\r\n            Error(err)\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Button.Ripple className='ml-2 mb-2' color='primary' onClick={(e) => history.goBack()}>\r\n                <ChevronLeft size={10} />\r\n                <span className='align-middle ml-50'>Back</span>\r\n            </Button.Ripple>\r\n            <Card>\r\n                <h4 className=\"text-center py-2\">Update Stock </h4>\r\n            </Card>\r\n\r\n            {ProdDetails.productname ? <Form style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                <Card>\r\n                    <CardHeader className='border-bottom mb-1'>\r\n                        <CardTitle tag='h5'>Discount</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <Col md='4' className='my-1'>\r\n                                <Label>Discount Offer (%)</Label>\r\n                                <Input\r\n                                    min={0}\r\n                                    type='number'\r\n                                    value={ProdDetails.discount_percent}\r\n                                    onChange={e => setProdDetails({ ...ProdDetails, discount_percent: e.target.value })}\r\n                                // disabled\r\n                                />\r\n                            </Col>\r\n\r\n                            {ProdDetails.discount_percent > 0 ? <><Col md='4' className='my-1'>\r\n                                <Label>Start Date</Label>\r\n                                <Input\r\n                                    type='date'\r\n                                    value={new Date(ProdDetails.discount_startdate).toLocaleDateString('fr-CA')}\r\n                                    onChange={e => setProdDetails({ ...ProdDetails, discount_startdate: e.target.value })}\r\n                                // disabled\r\n                                />\r\n                            </Col>\r\n                                <Col md='4' className='my-1'>\r\n                                    <Label>End Date</Label>\r\n                                    <Input\r\n                                        type='date'\r\n                                        min={new Date(ProdDetails.discount_startdate).toLocaleDateString('fr-CA')}\r\n                                        value={new Date(ProdDetails.discount_enddate).toLocaleDateString('fr-CA')}\r\n                                        onChange={e => setProdDetails({ ...ProdDetails, discount_enddate: e.target.value })}\r\n                                    // disabled\r\n                                    />\r\n                                </Col>\r\n                                <Col md='4' className='my-1'>\r\n                                    <Label>Quota</Label>\r\n                                    <Input\r\n                                        type='number'\r\n                                        required={!ProdDetails.is_budget}\r\n                                        min={!ProdDetails.is_budget ? 1 : 0}\r\n                                        value={ProdDetails.discount_quota}\r\n                                        onChange={e => setProdDetails({ ...ProdDetails, discount_quota: e.target.value })}\r\n                                    // disabled\r\n                                    />\r\n                                </Col>\r\n                                <Col md='4' className='my-1'>\r\n                                    <Label>Is Budget?</Label>\r\n                                    <CustomInput\r\n                                        style={{ zIndex: '0' }}\r\n                                        className='mt-1'\r\n                                        onChange={e => setProdDetails({ ...ProdDetails, is_budget: e.target.checked })}\r\n                                        checked={ProdDetails.is_budget}\r\n                                        type='checkbox'\r\n                                        id='isB'\r\n                                        label='Yes'\r\n                                    />\r\n                                    {/* <Input\r\n                                    placeholder=\" \"\r\n                                    type='text'\r\n                                    defaultValue={!!ProdDetails.discount_budget}\r\n                                    disabled\r\n                                /> */}\r\n                                </Col>\r\n                                {ProdDetails.is_budget ? <Col md='4' className='my-1'>\r\n                                    <Label>Budget</Label>\r\n                                    <Input\r\n                                        placeholder=\" \"\r\n                                        type='number'\r\n                                        required={ProdDetails.is_budget}\r\n                                        min={ProdDetails.is_budget ? 1 : 0}\r\n                                        value={ProdDetails.discount_budget}\r\n                                        onChange={e => setProdDetails({ ...ProdDetails, discount_budget: e.target.value })}\r\n                                    // disabled\r\n                                    />\r\n                                </Col> : ''} </> : ''}\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n                {/* <Card>\r\n                    <CardHeader className='border-bottom mb-1'>\r\n                        <CardTitle tag='h5'>Optional Info</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <Col md='4' className='my-1'>\r\n                                <Label>Product Price</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    defaultValue={OpFixedData.product_price}\r\n                                // disabled\r\n                                />\r\n                            </Col>\r\n                            <Col md='4' className='my-1'>\r\n                                <Label>Product Weight</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    defaultValue={OpFixedData.product_weight}\r\n                                    disabled\r\n                                />\r\n                            </Col>\r\n                            <Col md='4' className='my-1'>\r\n                                <Label>Product quantity</Label>\r\n                                <Input\r\n                                    type='text'\r\n                                    defaultValue={OpFixedData.product_quantity}\r\n                                // disabled\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>  */}\r\n                {productTypeName === '' ? null : <Card>\r\n                    <CardHeader className='border-bottom mb-1'>\r\n                        <CardTitle tag='h5'>Product name :  {ProdDetails.productname}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <Row>\r\n                            {\r\n                                ProdDetails[\"optional_data\"].map((singleobj, index) => {\r\n                                    const mainIndex = index\r\n                                    const keys = Object.keys(singleobj), showkeys = []\r\n                                    keys.map((key, i) => {\r\n\r\n                                        if (!AdditionalInfoData.includes(key)) {\r\n\r\n                                            showkeys.push(key)\r\n                                        }\r\n                                    })\r\n\r\n                                    return <Col key={index} md='6'>\r\n                                        <Card style={{ border: \"1px solid #d2c7c7\" }}>\r\n                                            <CardHeader className='border-bottom mb-1'>\r\n                                                <CardTitle tag='h5'>Item {index + 1}</CardTitle>\r\n                                            </CardHeader>\r\n                                            <CardBody>\r\n                                                <Row>\r\n                                                    {showkeys.map((key, index) => {\r\n\r\n                                                        let label = key, value = singleobj[key]\r\n                                                        producttypedynamicinfo.every((s_obj, s_index) => {\r\n\r\n                                                            if (s_obj[\"entity_name\"] === key) {\r\n                                                                if (s_obj[\"is_key_value_pair_array\"]) {\r\n                                                                    s_obj[\"allow_values\"].every(alv => {\r\n                                                                        if (alv[\"value\"] === value) {\r\n                                                                            value = alv[\"label\"]\r\n                                                                            return false\r\n                                                                        }\r\n                                                                        return true\r\n                                                                    })\r\n                                                                }\r\n                                                                label = s_obj[\"label\"]\r\n                                                                return false\r\n                                                            }\r\n                                                            return true\r\n                                                        })\r\n                                                        if (label === 'product_quantity' || label === 'product_price') {\r\n                                                            return <Col md='4' key={index} className='my-1'>\r\n                                                                <Label>{(label.replace(/^.{1}/g, label[0].toUpperCase())).replace(/_/g, ' ')}</Label>\r\n                                                                {label === 'product_quantity' ? <Input\r\n                                                                    required\r\n                                                                    type='number'\r\n                                                                    value={value}\r\n                                                                    onChange={e => {\r\n                                                                        const old = [...ProdDetails.optional_data]\r\n                                                                        old[mainIndex] = { ...old[mainIndex], product_quantity: e.target.value }\r\n                                                                        setProdDetails({\r\n                                                                            ...ProdDetails,\r\n                                                                            optional_data: old\r\n                                                                        })\r\n                                                                    }}\r\n                                                                /> : <Input\r\n                                                                    required\r\n                                                                    type='number'\r\n                                                                    value={value}\r\n                                                                    onChange={e => {\r\n                                                                        if (Number(value) === ProdDetails.RRP) {\r\n                                                                            const old = [...ProdDetails.optional_data]\r\n                                                                            old[mainIndex] = { ...old[mainIndex], product_price: e.target.value }\r\n                                                                            setProdDetails({\r\n                                                                                ...ProdDetails,\r\n                                                                                RRP: Number(e.target.value),\r\n                                                                                optional_data: old\r\n                                                                            })\r\n                                                                        } else {\r\n                                                                            const old = [...ProdDetails.optional_data]\r\n                                                                            old[mainIndex] = { ...old[mainIndex], product_price: e.target.value }\r\n                                                                            setProdDetails({\r\n                                                                                ...ProdDetails,\r\n                                                                                optional_data: old\r\n                                                                            })\r\n                                                                        }\r\n                                                                    }}\r\n                                                                />}\r\n\r\n                                                            </Col>\r\n                                                        } else return ''\r\n                                                    }\r\n                                                    )\r\n                                                    }\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    {showkeys.map((key, index) => {\r\n                                                        let label = key\r\n                                                        const value = singleobj[key]\r\n                                                        producttypedynamicinfo.every((s_obj, s_index) => {\r\n                                                            // console.log('s_obj', s_obj)\r\n                                                            if (s_obj[\"entity_name\"] === key) {\r\n                                                                label = s_obj[\"label\"]\r\n                                                                return false\r\n                                                            }\r\n                                                            return true\r\n                                                        })\r\n                                                        if (label === 'product_quantity' || label === 'product_price') {\r\n                                                            return ''\r\n                                                        } else return <Col md='4' key={index} className='my-1'>\r\n                                                            <Label>{(label.replace(/^.{1}/g, label[0].toUpperCase())).replace(/_/g, ' ')}</Label>\r\n                                                            {\r\n                                                                label === 'product_color' ? <div style={{\r\n                                                                    backgroundColor: value,\r\n                                                                    height: '30px',\r\n                                                                    width: '30px',\r\n                                                                    marginTop: '2px',\r\n                                                                    border: '4px solid #efefef',\r\n                                                                    borderRadius: '50%'\r\n                                                                }}>\r\n                                                                </div> : <Input\r\n                                                                    type='text'\r\n                                                                    value={value}\r\n                                                                    disabled\r\n                                                                />\r\n                                                            }\r\n                                                        </Col>\r\n                                                    })}\r\n                                                </Row>\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                                })\r\n                            }\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>}\r\n                <Card>\r\n                    <CardBody>\r\n                        <Row>\r\n                            <Col sm=\"12\" className='text-center'>\r\n                                <FormGroup>\r\n                                    {\r\n                                        isLoading ? <Button.Ripple color='primary' disabled >\r\n                                            <Spinner color='white' size='sm' />\r\n                                            <small className='ml-50'>Loading...</small>\r\n                                        </Button.Ripple> : <Button.Ripple color='primary' type=\"submit\"  >\r\n                                            <span>Update Stock</span>\r\n                                        </Button.Ripple>\r\n                                    }\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </CardBody>\r\n                </Card>\r\n            </Form> : <Card>\r\n                <CardBody>\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                    <Skeleton active />\r\n                </CardBody>\r\n            </Card>}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardTitle = function CardTitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-title'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardTitle.propTypes = propTypes;\nCardTitle.defaultProps = defaultProps;\nexport default CardTitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  type: PropTypes.string,\n  size: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  type: 'border',\n  children: 'Loading...'\n};\n\nvar Spinner = function Spinner(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      type = props.type,\n      size = props.size,\n      color = props.color,\n      children = props.children,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"type\", \"size\", \"color\", \"children\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, size ? \"spinner-\" + type + \"-\" + size : false, \"spinner-\" + type, color ? \"text-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    role: \"status\"\n  }, attributes, {\n    className: classes\n  }), children && /*#__PURE__*/React.createElement(\"span\", {\n    className: mapToCssModules('sr-only', cssModule)\n  }, children));\n};\n\nSpinner.propTypes = propTypes;\nSpinner.defaultProps = defaultProps;\nexport default Spinner;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}