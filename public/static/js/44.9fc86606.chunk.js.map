{"version":3,"sources":["views/CustomComponents/EstateAdminPages/TenantPages/CreateTenant.js","views/CustomComponents/ImgUpload.js"],"names":["withReactContent","Swal","CreateTenant","history","useHistory","userRole","JSON","parse","localStorage","getItem","role","number_of_renterRef","useRef","branch_idRef","property_idRef","useState","imgUpLoading","setimgUpLoading","fileUrls","setFileUrls","previewVisible","previewImage","previewTitle","fileList","state","setState","leasfileUrls","setleasFileUrls","leasstate","setleasState","isLoading","setLoading","mobile","email","full_name","property_id","property_name","branch_id","address","number_of_renter","is_leas_file_url","leas_expiry_date","leas_file_url","photo","userInput","setUserInput","BranchList","setBranchList","propertyList","setpropertyList","useEffect","useJwt","then","res","console","log","data","payload","untaggedPropertyList","id","catch","err","Error","error","seterror","handleChange","e","chkEmail","test","target","value","name","className","tag","Ripple","color","onClick","push","size","style","marginTop","width","onSubmit","preventDefault","toast","length","url","submitData","sub_estate_manager_id","find","x","estate_manager_id","createTenant","Success","autoComplete","md","for","required","type","placeholder","onChange","addonType","PHONE_PREFIX","autoFocus","minLength","maxLength","fontSize","ref","theme","selectThemeColors","classNamePrefix","maxMenuHeight","selected","options","map","label","branch_name","isClearable","opacity","height","onFocus","current","select","focus","house_details","checked","min","Date","toLocaleDateString","disabled","ImgUpload","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","a","preview","originFileObj","substring","lastIndexOf","uploadButton","props","beforeUpload","isLt2M","isJpgOrPng","formData","FormData","append","singleFileupload","fileurl","uid","status","action","IMG_BASE_URL","listType","onPreview","filter","some","b","includes","visible","title","footer","onCancel","alt","src"],"mappings":"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","file":"static/js/44.9fc86606.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, Upload\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport ImgUpload from '../../ImgUpload'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst CreateTenant = () => {\r\n    const history = useHistory()\r\n    const userRole = JSON.parse(localStorage.getItem('userData')).role\r\n    const number_of_renterRef = useRef()\r\n    const branch_idRef = useRef()\r\n    const property_idRef = useRef()\r\n    const addressRef = useRef()\r\n\r\n    const [imgUpLoading, setimgUpLoading] = useState(false)\r\n    const [fileUrls, setFileUrls] = useState([])\r\n    const [state, setState] = useState({\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: []\r\n    })\r\n    const [leasfileUrls, setleasFileUrls] = useState([])\r\n    const [leasstate, setleasState] = useState({\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: []\r\n    })\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [postcode, setPostCode] = useState('')\r\n    const [searching, setSearching] = useState(false)\r\n    const [ukaddress, setukaddress] = useState([])\r\n    const [userInput, setUserInput] = useState({\r\n        mobile: '',\r\n        email: '',\r\n        full_name: '',\r\n        property_id: '',\r\n        property_name: '',\r\n        branch_id: '',\r\n        address: '',\r\n        number_of_renter: '',\r\n        is_leas_file_url: false,\r\n        leas_expiry_date: '',\r\n        leas_file_url: '',\r\n        photo: ''\r\n    })\r\n    const tenantNumbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n    const [BranchList, setBranchList] = useState([])\r\n    const [propertyList, setpropertyList] = useState([])\r\n    useEffect(() => {\r\n        useJwt.BranchList().then(res => {\r\n            console.log(res.data.payload)\r\n            setBranchList(res.data.payload)\r\n            if (userRole === 'EstateManager') {\r\n                useJwt.untaggedPropertyList({ branch_id: res.data.payload[0].id }).then(res => {\r\n                    console.log('untaggedPropertyList', res.data.payload)\r\n                    setpropertyList(res.data.payload)\r\n                }).catch(err => {\r\n                    Error(err)\r\n                    console.log(err)\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n\r\n    }, [])\r\n    const handlePostCodeSearch = e => {\r\n        e.preventDefault()\r\n        setSearching(true)\r\n        useJwt.ukAddressEndpoint({ postcode }).then(res => {\r\n            console.log(res.data.payload)\r\n            setukaddress(res.data.payload.addresses.map(element => `${element.building_number}, ${element.thoroughfare}, ${element.locality}, ${element.town_or_city}`))\r\n            setSearching(false)\r\n        }).catch(err => {\r\n            setukaddress([])\r\n            setSearching(false)\r\n            Error(err)\r\n        })\r\n    }\r\n    const [error, seterror] = useState({\r\n        email: false,\r\n        mobile: false\r\n    })\r\n    const handleBranchChange = selected => {\r\n        useJwt.untaggedPropertyList({ branch_id: selected.value }).then(res => {\r\n            console.log('untaggedPropertyList', res.data.payload)\r\n            setpropertyList(res.data.payload)\r\n        }).catch(err => {\r\n            Error(err)\r\n            console.log(err)\r\n        })\r\n        setUserInput({ ...userInput, branch_id: selected.value, property_id: '', property_name: '' })\r\n    }\r\n    const handleChange = e => {\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n        // Email Validator\r\n        if (e.target.name === 'email' && chkEmail) {\r\n            seterror({ ...error, email: false })\r\n        }\r\n        if (e.target.name === 'email' && !chkEmail) {\r\n            seterror({ ...error, email: true })\r\n        }\r\n        //mobile number validator\r\n        if (e.target.name === \"mobile\") {\r\n            // console.log(e.target.value)\r\n            if (e.target.value[0] === '0') {\r\n                seterror({ ...error, mobile: true })\r\n                return 0\r\n            } else {\r\n                seterror({ ...error, mobile: false })\r\n            }\r\n            if (!/^[0-9]*$/.test(e.target.value)) {\r\n                return 0\r\n            }\r\n        }\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (imgUpLoading) {\r\n            toast.error('please wait, image is uploading to the server')\r\n            return 0\r\n        }\r\n        if (!fileUrls.length) {\r\n            toast.error('please upload Tenant image')\r\n            return 0\r\n        }\r\n        if (userInput.is_leas_file_url && !leasfileUrls.length) {\r\n            toast.error('please upload your leas certificate')\r\n            return 0\r\n        }\r\n        const { mobile, email, full_name, property_id, branch_id, property_name, number_of_renter, is_leas_file_url, leas_expiry_date } = userInput\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(email)\r\n        if (!chkEmail) {\r\n            return 0\r\n        }\r\n        const photo = fileUrls.length ? fileUrls[0].url : null\r\n        const leas_file_url = is_leas_file_url ? leasfileUrls[0].url : null\r\n        const sub_estate_manager_id = !branch_id ? BranchList[0].estate_manager_id : BranchList.find(x => x.id === branch_id).estate_manager_id\r\n        const submitData = {\r\n            mobile,\r\n            email,\r\n            full_name,\r\n            address: property_name,\r\n            property_id,\r\n            sub_estate_manager_id,\r\n            number_of_renter,\r\n            // is_leas_file_url,\r\n            leas_expiry_date,\r\n            photo,\r\n            leas_file_url\r\n        }\r\n        console.log(submitData)\r\n        setLoading(true)\r\n        useJwt.createTenant(submitData).then(res => {\r\n            console.log(res)\r\n            Success(res)\r\n            history.push(`/${userRole}/TenantList`)\r\n            setLoading(false)\r\n        }).catch(err => {\r\n            Error(err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Create Tenant</CardTitle>\r\n                    <CardTitle tag='h4'><Button.Ripple color='primary' onClick={e => history.push(`/${userRole}/BulkTenantsUpload`)}>\r\n                        <Upload size={14} style={{ marginTop: '-2px' }} />&nbsp;\r\n                        <span>Bulk Create</span>\r\n                    </Button.Ripple></CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form className=\"row pt-1\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label for=\"full_name\">Fullname</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"text\"\r\n                                    id='full_name'\r\n                                    name=\"full_name\"\r\n                                    placeholder=\"Name\"\r\n                                    value={userInput.full_name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label className='form-label' for='mobile'>\r\n                                    Mobile Number\r\n                                </Label>\r\n                                <InputGroup className='input-group-merge w-100 mb-1'>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                            {PHONE_PREFIX}\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        required\r\n                                        type='text'\r\n                                        minLength={10}\r\n                                        maxLength={10}\r\n                                        id='mobile'\r\n                                        name='mobile'\r\n                                        value={userInput.mobile}\r\n                                        onChange={handleChange}\r\n                                        placeholder='123-456-7899'\r\n                                    />\r\n                                </InputGroup>\r\n                                {error.mobile && <span style={{ color: 'red', fontSize: '11px' }}>First digit 0 not allow</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    id='email'\r\n                                    name=\"email\"\r\n                                    placeholder=\"example@gmail.com\"\r\n                                    value={userInput.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {error.email && userInput.email && <span style={{ color: 'red', fontSize: '11px' }}>Please Enter a valid Email</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        {userRole !== 'EstateManager' && <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label>Select a Branch</Label>\r\n                                <><Select\r\n                                    ref={branch_idRef}\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    name='branch_id'\r\n                                    maxMenuHeight={150}\r\n                                    onChange={handleBranchChange}\r\n                                    options={BranchList.map(x => { return { value: x.id, label: x.branch_name } })}\r\n                                    // value={{ value: userInput.branch_id, label: userInput.branch_id }}\r\n                                    // isDisabled={!ukaddress.length}\r\n                                    isClearable={false}\r\n                                /><Input\r\n                                        required\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            width: \"100%\",\r\n                                            height: 0\r\n                                            // position: \"absolute\"\r\n                                        }}\r\n                                        onFocus={e => branch_idRef.current.select.focus()}\r\n                                        value={userInput.branch_id || ''}\r\n                                        onChange={e => ''}\r\n                                    /></> </FormGroup>\r\n                        </Col>}\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label>Select a Property</Label>\r\n                                <><Select\r\n                                    ref={property_idRef}\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    name='property_id'\r\n                                    maxMenuHeight={150}\r\n                                    onChange={selected => {\r\n                                        setUserInput({ ...userInput, property_id: selected.value, property_name: selected.label })\r\n                                    }}\r\n                                    options={propertyList.map(x => { return { value: x.id, label: x.house_details } })}\r\n                                    value={{ value: userInput.property_id, label: userInput.property_name }}\r\n                                    // isDisabled={!ukaddress.length}\r\n                                    isClearable={false}\r\n                                /><Input\r\n                                        required\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            width: \"100%\",\r\n                                            height: 0\r\n                                            // position: \"absolute\"\r\n                                        }}\r\n                                        onFocus={e => property_idRef.current.select.focus()}\r\n                                        value={userInput.property_id || ''}\r\n                                        onChange={e => ''}\r\n                                    /></> </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' className=\"mt-0\" >\r\n                            <FormGroup>\r\n                                <Label>Select Number of Tenant</Label>\r\n                                <><Select\r\n                                    ref={number_of_renterRef}\r\n                                    theme={selectThemeColors}\r\n                                    className='react-select'\r\n                                    classNamePrefix='select'\r\n                                    name='number_of_renter'\r\n                                    maxMenuHeight={150}\r\n                                    onChange={selected => {\r\n                                        setUserInput({ ...userInput, number_of_renter: selected.value })\r\n                                    }}\r\n                                    options={tenantNumbers.map(x => { return { value: x, label: x } })}\r\n                                    // value={{ value: userInput.number_of_renter, label: userInput.number_of_renter }}\r\n                                    // isDisabled={!ukaddress.length}\r\n                                    isClearable={false}\r\n                                /><Input\r\n                                        required\r\n                                        style={{\r\n                                            opacity: 0,\r\n                                            width: \"100%\",\r\n                                            height: 0\r\n                                            // position: \"absolute\"\r\n                                        }}\r\n                                        onFocus={e => number_of_renterRef.current.select.focus()}\r\n                                        value={userInput.number_of_renter || ''}\r\n                                        onChange={e => ''}\r\n                                    /></> </FormGroup>\r\n                        </Col>\r\n\r\n                        {/* <Col md='6' >\r\n                            <Label for=\"postcode\">Search Address by Post Code</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    // required\r\n                                    type=\"text\"\r\n                                    id='postcode'\r\n                                    name=\"postcode\"\r\n                                    placeholder=\"enter a valid postcode\"\r\n                                    value={postcode}\r\n                                    onChange={e => setPostCode(e.target.value)}\r\n                                />\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline type='button' onClick={handlePostCodeSearch}>\r\n                                        {searching ? <Spinner size='sm' /> : 'Search'}\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col md='6' >\r\n                            <Label>Address</Label>\r\n                            <><Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                isClearable={false}\r\n                            /><Input\r\n                                    required\r\n                                    style={{\r\n                                        opacity: 0,\r\n                                        width: \"100%\",\r\n                                        height: 0\r\n                                        // position: \"absolute\"\r\n                                    }}\r\n                                    onFocus={e => addressRef.current.select.focus()}\r\n                                    value={userInput.address || ''}\r\n                                    onChange={e => ''}\r\n                                /></>\r\n                        </Col> */}\r\n\r\n                        <Col md='4' className='my-1'>\r\n                            <Label>Tenant Image</Label>\r\n                            <ImgUpload\r\n                                setimgUpLoading={setimgUpLoading}\r\n                                state={state}\r\n                                setState={setState}\r\n                                fileUrls={fileUrls}\r\n                                setFileUrls={setFileUrls} />\r\n                        </Col>\r\n\r\n                        <Col md='2' className='mt-1'>\r\n                            <Label for=\"is_leas_file_url\">Leas Certified?</Label>\r\n                            <CustomInput\r\n                                // required\r\n                                type='checkbox'\r\n                                className='custom-control-Primary'\r\n                                id='is_leas_file_url'\r\n                                onChange={e => setUserInput({ ...userInput, is_leas_file_url: e.target.checked })}\r\n                                checked={userInput.is_leas_file_url}\r\n                                label='' />\r\n                        </Col>\r\n                        {userInput.is_leas_file_url && <><Col md='6' className=\"mt-1\" >\r\n                            <FormGroup>\r\n                                <Label for=\"leas_expiry_date\">Leas Certificate Expire Date</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"date\"\r\n                                    min={new Date().toLocaleDateString('fr-CA')}\r\n                                    id='leas_expiry_date'\r\n                                    name=\"leas_expiry_date\"\r\n                                    placeholder=\"100\"\r\n                                    value={userInput.leas_expiry_date}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                            <Col md='4' className='my-1'>\r\n                                <Label>Leas Certificate</Label>\r\n                                <ImgUpload\r\n                                    setimgUpLoading={setimgUpLoading}\r\n                                    state={leasstate}\r\n                                    setState={setleasState}\r\n                                    fileUrls={leasfileUrls}\r\n                                    setFileUrls={setleasFileUrls} />\r\n                            </Col></>}\r\n                        <Col md=\"12 text-center\">\r\n                            <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                                {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                            </Button.Ripple>\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateTenant","import React, { useState } from 'react'\r\nimport { Upload, Modal } from 'antd'\r\n// import { PlusOutlined } from '@ant-design/icons'\r\nimport 'antd/dist/antd.css'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Camera } from 'react-feather'\r\nimport { Error } from '../viewhelper'\r\nimport { IMG_BASE_URL } from '../Configuarables'\r\n\r\nconst ImgUpload = ({ fileUrls, setFileUrls, state, setState, setimgUpLoading }) => {\r\n    // const [fileUrls, setFileUrls] = useState([])\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n    // const [state, setState] = useState({\r\n    //     previewVisible: false,\r\n    //     previewImage: '',\r\n    //     previewTitle: '',\r\n    //     fileList: []\r\n    // })\r\n    const { previewVisible, previewImage, fileList, previewTitle } = state\r\n    const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj)\r\n        }\r\n        setState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n        })\r\n    }\r\n    const handleChange = ({ fileList, file }) => {\r\n        // console.log(fileList, fileUrls)\r\n        if (file.size / 1024 / 1024 > 2) {\r\n            return 0\r\n        }\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n        if (!isJpgOrPng) {\r\n            return 0\r\n        }\r\n        setFileUrls(fileUrls.filter(a => fileList.some(b => a.uid === b.uid)))\r\n        setState({ ...state, fileList: fileList.filter(x => x.type.includes('image')) })\r\n    }\r\n    const uploadButton = (\r\n        <div className='text-center p-1' style={{ height: '102px', width: '102px' }}>\r\n            <span ><Camera size={20} className='my-1' /></span> <br />\r\n            <span>Add Image</span>\r\n        </div>\r\n        // <div>\r\n        //     <PlusOutlined />\r\n        //     <div style={{ marginTop: 8 }}>Upload</div>\r\n        // </div>\r\n    )\r\n    const props = {\r\n        beforeUpload: file => {\r\n            const isLt2M = file.size / 1024 / 1024 < 2\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n            if (!isJpgOrPng) {\r\n                toast.error(`${file.name} is not a Image file`)\r\n            } else if (!isLt2M) {\r\n                toast.error('Image must smaller than 2MB!')\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('complain_image', file)\r\n                setimgUpLoading(true)\r\n                useJwt.singleFileupload(formData).then(res => {\r\n                    console.log(res.data.payload.fileurl)\r\n                    setimgUpLoading(false)\r\n                    setFileUrls([\r\n                        ...fileUrls,\r\n                        {\r\n                            uid: file.uid,\r\n                            name: 'image.png',\r\n                            status: 'done',\r\n                            type: \"image/jpeg\",\r\n                            url: res.data.payload.fileurl\r\n                        }\r\n                    ])\r\n                }).catch(err => {\r\n                    setimgUpLoading(false)\r\n                    console.log(err)\r\n                    Error(err)\r\n                })\r\n                return isJpgOrPng && isLt2M\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Upload\r\n                {...props}\r\n                action={`${IMG_BASE_URL}/api/fackupload`}\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgUpload"],"sourceRoot":""}