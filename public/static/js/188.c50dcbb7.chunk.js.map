{"version":3,"sources":["views/CustomComponents/SuperAdminPages/UserManagement/CreateUser.js","../node_modules/reactstrap/es/Card.js","views/CustomComponents/ImgUpload.js"],"names":["withReactContent","Swal","CreateUser","history","useHistory","addressRef","useRef","useState","imgUpLoading","setimgUpLoading","fileUrls","setFileUrls","previewVisible","previewImage","previewTitle","fileList","state","setState","isLoading","setLoading","postcode","setPostCode","searching","setSearching","ukaddress","setukaddress","mobile","email","full_name","address","userInput","setUserInput","error","seterror","handleChange","e","chkEmail","test","target","value","name","className","tag","style","width","onSubmit","preventDefault","toast","photo","length","url","console","log","useJwt","createSuperAdminUsers","then","res","push","catch","err","Error","autoComplete","md","for","required","type","id","placeholder","onChange","addonType","PHONE_PREFIX","autoFocus","minLength","maxLength","color","fontSize","outline","onClick","ukAddressEndpoint","postCode","data","payload","addresses","map","element","building_number","thoroughfare","locality","town_or_city","size","ref","theme","selectThemeColors","classNamePrefix","selected","maxMenuHeight","options","x","label","isClearable","opacity","height","onFocus","current","select","focus","Ripple","disabled","propTypes","tagPropType","inverse","PropTypes","bool","string","body","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","ImgUpload","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","handlePreview","a","preview","originFileObj","substring","lastIndexOf","uploadButton","beforeUpload","isLt2M","isJpgOrPng","formData","FormData","append","singleFileupload","fileurl","uid","status","action","IMG_BASE_URL","listType","onPreview","filter","some","b","includes","visible","title","footer","onCancel","alt","src"],"mappings":"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","file":"static/js/188.c50dcbb7.chunk.js","sourcesContent":["import React, { Fragment, useEffect, useState, useRef } from 'react'\r\nimport {\r\n    ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft, RefreshCw\r\n} from 'react-feather'\r\nimport {\r\n    Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, InputGroupAddon, InputGroupText, CustomInput\r\n} from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { toast } from 'react-toastify'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { PHONE_PREFIX } from '../../../Configuarables'\r\nimport { Error, Success, ErrorMessage } from '../../../viewhelper'\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nimport ImgUpload from '../../ImgUpload'\r\n\r\nconst CreateUser = () => {\r\n    const history = useHistory()\r\n    const addressRef = useRef()\r\n    const [imgUpLoading, setimgUpLoading] = useState(false)\r\n    const [fileUrls, setFileUrls] = useState([])\r\n    const [state, setState] = useState({\r\n        previewVisible: false,\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: []\r\n    })\r\n\r\n    const [isLoading, setLoading] = useState(false)\r\n    const [postcode, setPostCode] = useState('')\r\n    const [searching, setSearching] = useState(false)\r\n    const [ukaddress, setukaddress] = useState([])\r\n    const [userInput, setUserInput] = useState({\r\n        mobile: '',\r\n        email: '',\r\n        full_name: '',\r\n        address: ''\r\n    })\r\n    const handlePostCodeSearch = e => {\r\n        e.preventDefault()\r\n        setSearching(true)\r\n        useJwt.ukAddressEndpoint({ postCode: postcode }).then(res => {\r\n            console.log(res.data.payload)\r\n            setukaddress(res.data.payload.addresses.map(element => `${element.building_number}, ${element.thoroughfare}, ${element.locality}, ${element.town_or_city}`))\r\n            setSearching(false)\r\n        }).catch(err => {\r\n            setukaddress([])\r\n            setSearching(false)\r\n            Error(err)\r\n        })\r\n    }\r\n    const [error, seterror] = useState({\r\n        email: false,\r\n        mobile: false\r\n    })\r\n    const handleChange = e => {\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(e.target.value)\r\n        // Email Validator\r\n        if (e.target.name === 'email' && chkEmail) {\r\n            seterror({ ...error, email: false })\r\n        }\r\n        if (e.target.name === 'email' && !chkEmail) {\r\n            seterror({ ...error, email: true })\r\n        }\r\n        //mobile number validator\r\n        if (e.target.name === \"mobile\") {\r\n            // console.log(e.target.value)\r\n            if (e.target.value[0] === '0') {\r\n                seterror({ ...error, mobile: true })\r\n                return 0\r\n            } else {\r\n                seterror({ ...error, mobile: false })\r\n            }\r\n            if (!/^[0-9]*$/.test(e.target.value)) {\r\n                return 0\r\n            }\r\n        }\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (imgUpLoading) {\r\n            toast.error('please wait, image is uploading to the server')\r\n            return 0\r\n        }\r\n        const photo = fileUrls.length ? fileUrls[0].url : null\r\n        console.log(userInput)\r\n        const { mobile, email, full_name, address } = userInput\r\n        const chkEmail = /\\S+@\\S+\\.\\S+/.test(email)\r\n        if (!chkEmail) {\r\n            return 0\r\n        }\r\n        setLoading(true)\r\n        useJwt.createSuperAdminUsers({ mobile, email, full_name, address, photo }).then(res => {\r\n            console.log(res)\r\n            setLoading(false)\r\n            history.push('/SuperAdmin/AllUsers')\r\n        }).catch(err => {\r\n            Error(err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Create New User</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Form className=\"row pt-1\" style={{ width: '100%' }} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label for=\"full_name\">Full Name</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"text\"\r\n                                    id='full_name'\r\n                                    name=\"full_name\"\r\n                                    placeholder=\"manager name\"\r\n                                    value={userInput.full_name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label className='form-label' for='mobile'>\r\n                                    Mobile Number\r\n                                </Label>\r\n                                <InputGroup className='input-group-merge w-100 mb-1'>\r\n                                    <InputGroupAddon addonType='prepend'>\r\n                                        <InputGroupText>\r\n                                            {PHONE_PREFIX}\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        autoFocus\r\n                                        required\r\n                                        type='text'\r\n                                        minLength={10}\r\n                                        maxLength={10}\r\n                                        id='mobile'\r\n                                        name='mobile'\r\n                                        value={userInput.mobile}\r\n                                        onChange={handleChange}\r\n                                        placeholder='123-456-7899'\r\n                                    />\r\n                                </InputGroup>\r\n                                {error.mobile && <span style={{ color: 'red', fontSize: '11px' }}>First digit 0 not allow</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md='4' >\r\n                            <FormGroup>\r\n                                <Label for=\"email\">Email</Label>\r\n                                <Input\r\n                                    required\r\n                                    type=\"email\"\r\n                                    id='email'\r\n                                    name=\"email\"\r\n                                    placeholder=\"example@gmail.com\"\r\n                                    value={userInput.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                {error.email && userInput.email && <span style={{ color: 'red', fontSize: '11px' }}>Please Enter a valid Email</span>}\r\n                            </FormGroup>\r\n                        </Col>\r\n\r\n                        <Col md='6' >\r\n                            <Label for=\"postcode\">Search Address by Post Code</Label>\r\n                            <InputGroup>\r\n                                <Input\r\n                                    // required\r\n                                    type=\"text\"\r\n                                    id='postcode'\r\n                                    name=\"postcode\"\r\n                                    placeholder=\"enter a valid postcode\"\r\n                                    value={postcode}\r\n                                    onChange={e => setPostCode(e.target.value)}\r\n                                />\r\n                                <InputGroupAddon addonType='append'>\r\n                                    <Button color='primary' outline type='button' onClick={handlePostCodeSearch}>\r\n                                        {searching ? <Spinner size='sm' /> : 'Search'}\r\n                                    </Button>\r\n                                </InputGroupAddon>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col md='6' >\r\n                            <Label>Address</Label>\r\n                            <><Select\r\n                                ref={addressRef}\r\n                                theme={selectThemeColors}\r\n                                className='react-select'\r\n                                classNamePrefix='select'\r\n                                name='address'\r\n                                onChange={selected => {\r\n                                    setUserInput({ ...userInput, address: selected.value })\r\n                                }}\r\n                                maxMenuHeight={150}\r\n                                options={ukaddress.map(x => { return { value: x, label: x } })}\r\n                                value={{ value: userInput.address, label: userInput.address }}\r\n                                // isDisabled={!ukaddress.length}\r\n                                isClearable={false}\r\n                            /><Input\r\n                                    required\r\n                                    style={{\r\n                                        opacity: 0,\r\n                                        width: \"100%\",\r\n                                        height: 0\r\n                                        // position: \"absolute\"\r\n                                    }}\r\n                                    onFocus={e => addressRef.current.select.focus()}\r\n                                    value={userInput.address || ''}\r\n                                    onChange={e => ''}\r\n                                /></>\r\n                        </Col>\r\n                        <Col md='12' className='my-0'>\r\n                            <Label>Photo</Label>\r\n                            <ImgUpload\r\n                                setimgUpLoading={setimgUpLoading}\r\n                                state={state}\r\n                                setState={setState}\r\n                                fileUrls={fileUrls}\r\n                                setFileUrls={setFileUrls} />\r\n                        </Col>\r\n                        <Col md=\"12 text-center\">\r\n                            <Button.Ripple className='mt-2' color='primary' type=\"submit\" disabled={isLoading}>\r\n                                {isLoading ? <Spinner size='sm' /> : 'Submit'}\r\n                            </Button.Ripple>\r\n                        </Col>\r\n                    </Form>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateUser","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { useState } from 'react'\r\nimport { Upload, Modal } from 'antd'\r\n// import { PlusOutlined } from '@ant-design/icons'\r\nimport 'antd/dist/antd.css'\r\nimport { Slide, toast } from 'react-toastify'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\nimport { Camera } from 'react-feather'\r\nimport { Error } from '../viewhelper'\r\nimport { IMG_BASE_URL } from '../Configuarables'\r\n\r\nconst ImgUpload = ({ fileUrls, setFileUrls, state, setState, setimgUpLoading }) => {\r\n    // const [fileUrls, setFileUrls] = useState([])\r\n    function getBase64(file) {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader()\r\n            reader.readAsDataURL(file)\r\n            reader.onload = () => resolve(reader.result)\r\n            reader.onerror = error => reject(error)\r\n        })\r\n    }\r\n    // const [state, setState] = useState({\r\n    //     previewVisible: false,\r\n    //     previewImage: '',\r\n    //     previewTitle: '',\r\n    //     fileList: []\r\n    // })\r\n    const { previewVisible, previewImage, fileList, previewTitle } = state\r\n    const handleCancel = () => setState({ ...state, previewVisible: false })\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj)\r\n        }\r\n        setState({\r\n            ...state,\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\r\n        })\r\n    }\r\n    const handleChange = ({ fileList, file }) => {\r\n        // console.log(fileList, fileUrls)\r\n        if (file.size / 1024 / 1024 > 2) {\r\n            return 0\r\n        }\r\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n        if (!isJpgOrPng) {\r\n            return 0\r\n        }\r\n        setFileUrls(fileUrls.filter(a => fileList.some(b => a.uid === b.uid)))\r\n        setState({ ...state, fileList: fileList.filter(x => x.type.includes('image')) })\r\n    }\r\n    const uploadButton = (\r\n        <div className='text-center p-1' style={{ height: '102px', width: '102px' }}>\r\n            <span ><Camera size={20} className='my-1' /></span> <br />\r\n            <span>Add Image</span>\r\n        </div>\r\n        // <div>\r\n        //     <PlusOutlined />\r\n        //     <div style={{ marginTop: 8 }}>Upload</div>\r\n        // </div>\r\n    )\r\n    const props = {\r\n        beforeUpload: file => {\r\n            const isLt2M = file.size / 1024 / 1024 < 2\r\n            const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n            if (!isJpgOrPng) {\r\n                toast.error(`${file.name} is not a Image file`)\r\n            } else if (!isLt2M) {\r\n                toast.error('Image must smaller than 2MB!')\r\n            } else {\r\n                const formData = new FormData()\r\n                formData.append('complain_image', file)\r\n                setimgUpLoading(true)\r\n                useJwt.singleFileupload(formData).then(res => {\r\n                    console.log(res.data.payload.fileurl)\r\n                    setimgUpLoading(false)\r\n                    setFileUrls([\r\n                        ...fileUrls,\r\n                        {\r\n                            uid: file.uid,\r\n                            name: 'image.png',\r\n                            status: 'done',\r\n                            type: \"image/jpeg\",\r\n                            url: res.data.payload.fileurl\r\n                        }\r\n                    ])\r\n                }).catch(err => {\r\n                    setimgUpLoading(false)\r\n                    console.log(err)\r\n                    Error(err)\r\n                })\r\n                return isJpgOrPng && isLt2M\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Upload\r\n                {...props}\r\n                action={`${IMG_BASE_URL}/api/fackupload`}\r\n                listType=\"picture-card\"\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={handleChange}\r\n            >\r\n                {fileList.length >= 1 ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                visible={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImgUpload"],"sourceRoot":""}