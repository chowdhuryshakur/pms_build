{"version":3,"sources":["views/tables/data-tables/basic/UserTable.js","views/viewhelper.js","../node_modules/reactstrap/es/Label.js","views/tables/data-tables/basic/AddNewModal.js"],"names":["MySwal","withReactContent","Swal","UserTable","useHistory","useState","searchValue","setSearchValue","isloading","tableDataLoading","setTDL","value","label","userList","setUserlist","userType","userTitle","storeName","currentPage","setCurrentPage","efct","setEfct","useEffect","useJwt","adminUserList","then","res","console","log","data","payload","catch","err","status","title","color","columns","name","minWidth","selector","item","fullname","sortable","adminstore","storename","row","adminstatus","statusdesc","userstatus","pill","allowOverflow","cell","className","to","id","size","style","cursor","marginTop","onClick","e","userID","preventDefault","fire","text","icon","allowOutsideClick","allowEscapeKey","showCancelButton","confirmButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","adminUserdelete","response","userStatus","toggleStatus","adminUserBlock","Ripple","tag","Link","width","onSubmit","adminUserSearch","autoComplete","placeholder","type","required","onChange","target","disabled","noHeader","pagination","paginationPerPage","sortIcon","paginationDefaultPage","paginationComponent","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","length","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","progressPending","progressComponent","responsive","Error","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","ErrorMessage","errors","Object","keys","Success","success","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","bool","shape","order","offset","propTypes","children","node","hidden","check","for","tagPropType","cssModule","object","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","i","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","mapToCssModules","classNames","classes","React","createElement","_extends","AddNewModal","open","handleModal","Date","Picker","setPicker","CloseBtn","isOpen","toggle","modalClassName","contentClassName","close","addonType","date","outline"],"mappings":"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","file":"static/js/226.3997b224.chunk.js","sourcesContent":["import { Fragment, useState, forwardRef, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n// ** Table Data & Columns\r\n//import { data } from '../data'\r\n\r\n// ** Add New Modal Component\r\nimport AddNewModal from './AddNewModal'\r\nimport Select from 'react-select'\r\n// ** Third Party Components\r\nimport ReactPaginate from 'react-paginate'\r\nimport DataTable from 'react-data-table-component'\r\nimport { ChevronDown, Share, Printer, FileText, File, Grid, Copy, Plus, MoreVertical, Edit, Archive, Trash, Search, Eye, Lock, ChevronLeft } from 'react-feather'\r\nimport { selectThemeColors, transformInToFormObject } from '@utils'\r\nimport { Card, CardHeader, CardTitle, Button, UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem, Input, Label, Row, Col, Badge, Form, FormGroup, UncontrolledDropdown, Spinner, CardBody } from 'reactstrap'\r\n\r\nimport { Error, Success } from '../../../viewhelper'\r\nimport useJwt from '@src/auth/jwt/useJwt'\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst UserTable = () => {\r\n    const history = useHistory()\r\n    const [searchValue, setSearchValue] = useState('')\r\n    const [isloading, setisloading] = useState(false)\r\n    const [tableDataLoading, setTDL] = useState(true)\r\n    const [userTypeData, setuserTypeData] = useState([{ value: \"\", label: \"\" }])\r\n    const [userTitleData, setuserTitleData] = useState([{ value: \"\", label: \"\" }])\r\n    const [userList, setUserlist] = useState([])\r\n    const [storeList, setStoreList] = useState([])\r\n    const [userInput, setUserInput] = useState({})\r\n    const [error, seterror] = useState({\r\n        userType: false,\r\n        userTitle: false,\r\n        storeName: false\r\n    })\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n    const [efct, setEfct] = useState(true)\r\n\r\n    useEffect(() => {\r\n        /*useJwt.userRoleList().then(res => {\r\n            // console.log(res.data.payload)\r\n            const userTypeApi = res.data.payload.map(type => {\r\n                return { value: type.id, label: type.statusdesc }\r\n            })\r\n            setuserTypeData(userTypeApi)\r\n        }).catch(err => {\r\n            console.log(err.response)\r\n        })\r\n        useJwt.userTitleList().then(res => {\r\n            // console.log(res.data.payload)\r\n            const userTitleApi = res.data.payload.map(type => {\r\n                return { value: type.id, label: type.statusdesc }\r\n            })\r\n            setuserTitleData(userTitleApi)\r\n        }).catch(err => {\r\n            console.log(err.response)\r\n        })*/\r\n        useJwt.adminUserList().then(res => {\r\n            console.log(res.data.payload)\r\n            setUserlist(res.data.payload)\r\n            setTDL(false)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n       /* useJwt.storeList().then(res => {\r\n            // console.log(res.data.payload)\r\n            const storeApi = res.data.payload.map(type => {\r\n                return { value: type.storeid, label: type.storename }\r\n            })\r\n            setStoreList(storeApi)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })*/\r\n        \r\n\r\n    }, [efct])\r\n\r\n    const onchange = (e) => {\r\n        setUserInput({ ...userInput, [e.target.name]: e.target.value })\r\n\r\n    }\r\n    const handleUserType = (option, { action }) => {\r\n        if (action === 'clear') {\r\n            setUserInput({ ...userInput, UserType: null })\r\n        } else {\r\n            setUserInput({ ...userInput, UserType: option.value })\r\n        }\r\n    }\r\n    const handleUserTitle = (option, { action }) => {\r\n        if (action === 'clear') {\r\n            setUserInput({ ...userInput, UserTitle: null })\r\n        } else {\r\n            setUserInput({ ...userInput, UserTitle: option.value })\r\n        }\r\n    }\r\n    const handleStoreName = (option, { action }) => {\r\n        if (action === 'clear') {\r\n            setUserInput({ ...userInput, StoreName: null })\r\n        } else {\r\n            setUserInput({ ...userInput, StoreName: option.value })\r\n        }\r\n    }\r\n    const onsubmit = (e) => {\r\n        e.preventDefault()\r\n        // console.log(userInput)\r\n        const err = { ...error }\r\n        !userInput.UserType ? err.userType = true : err.userType = false\r\n        !userInput.UserTitle ? err.userTitle = true : err.userTitle = false\r\n        !userInput.StoreName ? err.storeName = true : err.storeName = false\r\n        seterror(err)\r\n        if (!err.userType && !err.userTitle && !err.storeName) {\r\n            const { username, password, Email, firstName, lastName, StoreName, UserType, UserTitle } = userInput\r\n            const fullname = `${firstName} ${lastName}`\r\n            useJwt.addAdminUser({ fullname, username, password, roleid: UserType, emailid: Email, storeid: StoreName, title: UserTitle }).then(res => {\r\n                console.log(res)\r\n                MySwal.fire({\r\n                    icon: 'success',\r\n                    title: 'Done!',\r\n                    text: 'The Staff has been added successfully',\r\n                    customClass: {\r\n                        confirmButton: 'btn btn-success'\r\n                    }\r\n                })\r\n                setTimeout(function () { history.replace('/user') }, 1000)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n    // ** Table Common Column\r\n    const status = {\r\n        1: { title: 'Active', color: 'light-success ' },\r\n        0: { title: 'Blocked', color: 'light-danger' }\r\n    }\r\n    const handleDelete = (userID) => {\r\n        return MySwal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-outline-danger ml-1'\r\n            },\r\n            buttonsStyling: false\r\n        }).then(function (result) {\r\n            if (result.value) {\r\n                //fetch business delete api...\r\n                useJwt.adminUserdelete({ id: userID }).then(res => {\r\n                    // console.log(res)\r\n                    //   removedeleteitem(userID)\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Deleted!',\r\n                        text: 'The Staff has been deleted.',\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-success'\r\n                        }\r\n                    })\r\n                    setEfct(!efct)\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                })\r\n            }\r\n        })\r\n    }\r\n    // user staus block\r\n    const handleBlock = (userID, userStatus) => {\r\n        return MySwal.fire({\r\n            title: 'Are you sure?',\r\n            icon: 'warning',\r\n            allowOutsideClick: false,\r\n            allowEscapeKey: false,\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            customClass: {\r\n                confirmButton: 'btn btn-primary',\r\n                cancelButton: 'btn btn-outline-danger ml-1'\r\n            },\r\n            buttonsStyling: false\r\n        }).then(function (result) {\r\n            if (result.value) {\r\n\r\n                let toggleStatus\r\n                userStatus === 0 ? toggleStatus = 1 : userStatus === 1 ? toggleStatus = 0 : toggleStatus = 0\r\n                useJwt.adminUserBlock({ id: userID, status: toggleStatus }).then(res => {\r\n                    console.log(res)\r\n                    //   removedeleteitem(userID)\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Status updated!',\r\n                        // text: 'The user has been Blocked',\r\n                        customClass: {\r\n                            confirmButton: 'btn btn-success'\r\n                        }\r\n                    })\r\n                    setEfct(!efct)\r\n                }).catch(err => {\r\n                    console.log(err.response)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            name: 'Name',\r\n            minWidth: '100px',\r\n            selector: (item) => {\r\n                return item.fullname ? item.fullname : ''\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Email',\r\n            selector: 'emailid',\r\n            minWidth: '150px',\r\n            sortable: true\r\n        },\r\n      \r\n\r\n        {\r\n            name: 'Store Name',\r\n            selector: (item) => {\r\n                return item.adminstore ? item.adminstore.storename : ''\r\n            },\r\n            minWidth: '150px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Role',\r\n            selector: (row) => {\r\n                return row['adminstatus'] ? row.adminstatus.statusdesc : \"\"\r\n            },\r\n            minWidth: '150px',\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Status',\r\n            minWidth: '50px',\r\n            selector: row => {\r\n                return (\r\n                    <Badge color={status[row.userstatus].color} pill>\r\n                        {status[row.userstatus].title}\r\n                    </Badge>\r\n                )\r\n            },\r\n            sortable: true\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            allowOverflow: true,\r\n            cell: row => {\r\n                return (\r\n                    <div className='d-flex'>\r\n                        <Link to={`/userDetails/${row.id}`}><Eye size={15} color='#2bc871' style={{ cursor: 'pointer' }} /></Link> &nbsp;&nbsp;\r\n                        <Link to={`/EditUserInfo/${row.id}`}><Edit size={15} color='#7367f0' style={{ cursor: 'pointer' }} /></Link> &nbsp;&nbsp;\r\n                        <Trash size={15} color='red' style={{ cursor: 'pointer', marginTop: '2.5px' }} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(row.id)\r\n                        }} /> &nbsp;&nbsp;\r\n                        <Lock size={15} color='teal' style={{ cursor: 'pointer', marginTop: '2.5px' }} onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleBlock(row.id, row.userstatus)\r\n                        }} />\r\n                        {/* <UncontrolledDropdown>\r\n                            <DropdownToggle className='pr-1' tag='span'>\r\n                                <MoreVertical size={15} style={{ cursor: 'pointer' }} />\r\n                            </DropdownToggle>\r\n                            <DropdownMenu right>\r\n                                <DropdownItem tag='a' href={`/EditUserInfo/${row.id}`} className='w-100'>\r\n                                    <Edit size={15} color='#2bc871' style={{ cursor: 'pointer' }} />\r\n                                    <span className='align-middle ml-50'>Edit</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100' onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    handleDelete(row.id)\r\n                                }}>\r\n                                    <Trash size={15} color='red' style={{ cursor: 'pointer' }} />\r\n                                    <span className='align-middle ml-50'>Delete</span>\r\n                                </DropdownItem>\r\n                                <DropdownItem className='w-100' onClick={(e) => {\r\n                                    e.preventDefault()\r\n                                    handleBlock(row.id, row.userstatus)\r\n                                }}>\r\n                                    <Lock size={15} color='teal' style={{ cursor: 'pointer' }} />\r\n                                    <span className='align-middle ml-50'>{row.userstatus === 1 ? \"Block\" : \"Unblock\"}</span>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>\r\n                        </UncontrolledDropdown> */}\r\n\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ]\r\n    // ** Function to handle Pagination\r\n    const handlePagination = page => {\r\n        setCurrentPage(page.selected)\r\n    }\r\n    // ** Custom Pagination\r\n    const CustomPagination = () => (\r\n        <ReactPaginate\r\n            previousLabel=''\r\n            nextLabel=''\r\n            forcePage={currentPage}\r\n            onPageChange={page => handlePagination(page)}\r\n            pageCount={userList.length ? userList.length / 10 : 1}\r\n            breakLabel='...'\r\n            pageRangeDisplayed={2}\r\n            marginPagesDisplayed={2}\r\n            activeClassName='active'\r\n            pageClassName='page-item'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            nextLinkClassName='page-link'\r\n            nextClassName='page-item next'\r\n            previousClassName='page-item prev'\r\n            previousLinkClassName='page-link'\r\n            pageLinkClassName='page-link'\r\n            breakClassName='page-item'\r\n            breakLinkClassName='page-link'\r\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\r\n        />\r\n    )\r\n    const onSearchValueChange = (e) => {\r\n        setSearchValue(e.target.value)\r\n    }\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault()\r\n        setTDL(true)\r\n        useJwt.adminUserSearch({searchValue}).then(res => {\r\n            console.log(res.data.payload)\r\n            setUserlist(res.data.payload)\r\n            setTDL(false)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Button.Ripple className='ml-2 mb-2' color='primary' tag={Link} to='/addNewUser'>\r\n                <Plus size={15} />\r\n                <span className='align-middle ml-50'>Add new Staff </span>\r\n            </Button.Ripple>\r\n            <Card>\r\n                <Form className=\"d-flex my-2 mx-1 justify-content-center\" style={{ width: '100%' }} onSubmit={handleSearchSubmit} autoComplete=\"off\">\r\n                    <Input\r\n                        style={{ width: '50%' }}\r\n                        placeholder=\"Search staff with User name, Name\"\r\n                        type='text'\r\n                        id='search-input'\r\n                        required\r\n                        value={searchValue}\r\n                        onChange={onSearchValueChange}\r\n                    />\r\n                    {\r\n                        isloading ? <Button.Ripple className='ml-2' color='primary' disabled={true} >\r\n                            <Spinner color='white' size='sm' />\r\n                            <small className='ml-50'>Loading...</small>\r\n                        </Button.Ripple> : <Button.Ripple className='ml-2' color='primary' type=\"submit\"  >\r\n                            <Search size={15} />\r\n                            <span className='align-middle ml-50'>Search</span>\r\n                        </Button.Ripple>\r\n                    }\r\n\r\n                </Form>\r\n            </Card>\r\n            {/* data table for user list */}\r\n            <Card>\r\n                <CardHeader className='border-bottom'>\r\n                    <CardTitle tag='h4'>Staff List</CardTitle>\r\n                </CardHeader>\r\n\r\n                <DataTable\r\n                    noHeader\r\n                    pagination\r\n                    /*selectableRows*/\r\n                    columns={columns}\r\n                    paginationPerPage={10}\r\n                    className='react-dataTable'\r\n                    sortIcon={<ChevronDown size={10} />}\r\n                    paginationDefaultPage={currentPage + 1}\r\n                    paginationComponent={CustomPagination}\r\n                    data={userList}\r\n                    progressPending={tableDataLoading}\r\n                    progressComponent={<Spinner color='primary' />}\r\n                    responsive={true}\r\n                /*selectableRowsComponent={BootstrapCheckbox}*/\r\n                />\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserTable","import { Fragment, useState } from 'react'\r\nimport { toast, Slide } from 'react-toastify'\r\n\r\n    export const Error = (err) => {\r\n        try {\r\n            const e = err.response\r\n            if (e.status === 404 || e.status === 401 || e.status === 400 || e.status === 500) {\r\n                toast.error(e.data.message, {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n            } else  {\r\n                toast.error('The server is under maintenance', {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined\r\n                    }) \r\n            }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        }\r\n \r\n    }\r\n\r\n    export const ErrorMessage = (err) => {\r\n        try {\r\n        const e = err.response\r\n        if (e.status === 404 || e.status === 401 || e.status === 400) {\r\n            toast.error(e.data.errors ? e.data.errors[Object.keys(e.data.errors)[0]] : e.data.message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n         }\r\n        } catch (e) {\r\n            toast.error('Please check your connection', {\r\n                position: \"top-right\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined\r\n                })  \r\n        } \r\n    }\r\n    export const Success = (response) => {\r\n        const message = response.data.message || 'success'\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n            })  \r\n    }\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","// ** React Imports\r\nimport { useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport Flatpickr from 'react-flatpickr'\r\nimport { User, Briefcase, Mail, Calendar, DollarSign, X } from 'react-feather'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Input,\r\n  Label\r\n} from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\n\r\nconst AddNewModal = ({ open, handleModal }) => {\r\n  // ** State\r\n  const [Picker, setPicker] = useState(new Date())\r\n\r\n  // ** Custom close btn\r\n  const CloseBtn = <X className='cursor-pointer' size={15} onClick={handleModal} />\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={open}\r\n      toggle={handleModal}\r\n      className='sidebar-sm'\r\n      modalClassName='modal-slide-in'\r\n      contentClassName='pt-0'\r\n    >\r\n      <ModalHeader className='mb-3' toggle={handleModal} close={CloseBtn} tag='div'>\r\n        <h5 className='modal-title'>New Record</h5>\r\n      </ModalHeader>\r\n      <ModalBody className='flex-grow-1'>\r\n        <FormGroup>\r\n          <Label for='full-name'>Full Name</Label>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <User size={15} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input id='full-name' placeholder='Bruce Wayne' />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='post'>Post</Label>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <Briefcase size={15} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input id='post' placeholder='Web Developer' />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='email'>Email</Label>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <Mail size={15} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type='email' id='email' placeholder='brucewayne@email.com' />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Label for='joining-date'>Joining Date</Label>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <Calendar size={15} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Flatpickr className='form-control' id='joining-date' value={Picker} onChange={date => setPicker(date)} />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <FormGroup className='mb-4'>\r\n          <Label for='salary'>Salary</Label>\r\n          <InputGroup>\r\n            <InputGroupAddon addonType='prepend'>\r\n              <InputGroupText>\r\n                <DollarSign size={15} />\r\n              </InputGroupText>\r\n            </InputGroupAddon>\r\n            <Input type='number' id='salary' />\r\n          </InputGroup>\r\n        </FormGroup>\r\n        <Button className='mr-1' color='primary' onClick={handleModal}>\r\n          Submit\r\n        </Button>\r\n        <Button color='secondary' onClick={handleModal} outline>\r\n          Cancel\r\n        </Button>\r\n      </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddNewModal\r\n"],"sourceRoot":""}